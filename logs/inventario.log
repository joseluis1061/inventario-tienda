2025-08-04 15:36:36 [restartedMain] INFO  c.j.i.InventarioTiendaApplication - Starting InventarioTiendaApplication using Java 21.0.7 with PID 19864 (D:\DesarrolloSoftware\Java\inventario-tienda\build\classes\java\main started by josel in D:\DesarrolloSoftware\Java\inventario-tienda)
2025-08-04 15:36:36 [restartedMain] DEBUG c.j.i.InventarioTiendaApplication - Running with Spring Boot v3.5.2, Spring v6.2.8
2025-08-04 15:36:36 [restartedMain] INFO  c.j.i.InventarioTiendaApplication - The following 1 profile is active: "dev"
2025-08-04 15:36:36 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-08-04 15:36:36 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-08-04 15:36:40 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-04 15:36:40 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 128 ms. Found 5 JPA repository interfaces.
2025-08-04 15:36:44 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-08-04 15:36:44 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-08-04 15:36:44 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.42]
2025-08-04 15:36:45 [restartedMain] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-08-04 15:36:45 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 8806 ms
2025-08-04 15:36:45 [restartedMain] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-08-04 15:36:45 [restartedMain] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.18.Final
2025-08-04 15:36:45 [restartedMain] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-08-04 15:36:46 [restartedMain] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-04 15:36:46 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-08-04 15:36:47 [restartedMain] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@2d9dfce2
2025-08-04 15:36:47 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-08-04 15:36:47 [restartedMain] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQL8Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-04 15:36:47 [restartedMain] WARN  org.hibernate.orm.deprecation - HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
2025-08-04 15:36:47 [restartedMain] INFO  o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 8.0
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-08-04 15:36:50 [restartedMain] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-08-04 15:36:50 [restartedMain] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-04 15:36:51 [restartedMain] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-08-04 15:36:53 [restartedMain] INFO  c.jlzDev.inventario.security.JwtUtil - JwtUtil inicializado - Expiraci√≥n: 24h, Refresh: 30d, Clave: 856bits
2025-08-04 15:36:53 [restartedMain] DEBUG c.j.i.s.JwtAuthenticationFilter - Filter 'jwtAuthenticationFilter' configured for use
2025-08-04 15:36:54 [restartedMain] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-08-04 15:36:54 [restartedMain] INFO  o.s.s.c.a.a.c.InitializeAuthenticationProviderBeanManagerConfigurer$InitializeAuthenticationProviderManagerConfigurer - Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2025-08-04 15:36:54 [restartedMain] WARN  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used by Spring Security for automatically configuring username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider. If the current configuration is intentional, to turn off this warning, increase the logging level of 'org.springframework.security.config.annotation.authentication.configuration.InitializeUserDetailsBeanManagerConfigurer' to ERROR
2025-08-04 15:36:54 [restartedMain] WARN  o.s.s.c.a.w.c.AuthorizeHttpRequestsConfigurer$AuthorizationManagerRequestMatcherRegistry - One of the patterns in [GET, /api/productos/**] is missing a leading slash. This is discouraged; please include the leading slash in all your request matcher patterns. In future versions of Spring Security, leaving out the leading slash will result in an exception.
2025-08-04 15:36:55 [restartedMain] WARN  o.s.s.c.a.w.c.AuthorizeHttpRequestsConfigurer$AuthorizationManagerRequestMatcherRegistry - One of the patterns in [POST, /api/productos/**] is missing a leading slash. This is discouraged; please include the leading slash in all your request matcher patterns. In future versions of Spring Security, leaving out the leading slash will result in an exception.
2025-08-04 15:36:55 [restartedMain] WARN  o.s.s.c.a.w.c.AuthorizeHttpRequestsConfigurer$AuthorizationManagerRequestMatcherRegistry - One of the patterns in [PUT, /api/productos/**] is missing a leading slash. This is discouraged; please include the leading slash in all your request matcher patterns. In future versions of Spring Security, leaving out the leading slash will result in an exception.
2025-08-04 15:36:55 [restartedMain] WARN  o.s.s.c.a.w.c.AuthorizeHttpRequestsConfigurer$AuthorizationManagerRequestMatcherRegistry - One of the patterns in [DELETE, /api/productos/**] is missing a leading slash. This is discouraged; please include the leading slash in all your request matcher patterns. In future versions of Spring Security, leaving out the leading slash will result in an exception.
2025-08-04 15:36:55 [restartedMain] WARN  o.s.s.c.a.w.c.AuthorizeHttpRequestsConfigurer$AuthorizationManagerRequestMatcherRegistry - One of the patterns in [GET, /api/categorias/**] is missing a leading slash. This is discouraged; please include the leading slash in all your request matcher patterns. In future versions of Spring Security, leaving out the leading slash will result in an exception.
2025-08-04 15:36:55 [restartedMain] WARN  o.s.s.c.a.w.c.AuthorizeHttpRequestsConfigurer$AuthorizationManagerRequestMatcherRegistry - One of the patterns in [POST, /api/categorias/**] is missing a leading slash. This is discouraged; please include the leading slash in all your request matcher patterns. In future versions of Spring Security, leaving out the leading slash will result in an exception.
2025-08-04 15:36:55 [restartedMain] WARN  o.s.s.c.a.w.c.AuthorizeHttpRequestsConfigurer$AuthorizationManagerRequestMatcherRegistry - One of the patterns in [PUT, /api/categorias/**] is missing a leading slash. This is discouraged; please include the leading slash in all your request matcher patterns. In future versions of Spring Security, leaving out the leading slash will result in an exception.
2025-08-04 15:36:55 [restartedMain] WARN  o.s.s.c.a.w.c.AuthorizeHttpRequestsConfigurer$AuthorizationManagerRequestMatcherRegistry - One of the patterns in [DELETE, /api/categorias/**] is missing a leading slash. This is discouraged; please include the leading slash in all your request matcher patterns. In future versions of Spring Security, leaving out the leading slash will result in an exception.
2025-08-04 15:36:55 [restartedMain] WARN  o.s.s.c.a.w.c.AuthorizeHttpRequestsConfigurer$AuthorizationManagerRequestMatcherRegistry - One of the patterns in [GET, /api/movimientos/**] is missing a leading slash. This is discouraged; please include the leading slash in all your request matcher patterns. In future versions of Spring Security, leaving out the leading slash will result in an exception.
2025-08-04 15:36:55 [restartedMain] WARN  o.s.s.c.a.w.c.AuthorizeHttpRequestsConfigurer$AuthorizationManagerRequestMatcherRegistry - One of the patterns in [POST, /api/movimientos/**] is missing a leading slash. This is discouraged; please include the leading slash in all your request matcher patterns. In future versions of Spring Security, leaving out the leading slash will result in an exception.
2025-08-04 15:36:55 [restartedMain] DEBUG o.s.s.web.DefaultSecurityFilterChain - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CorsFilter, LogoutFilter, JwtAuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter
2025-08-04 15:36:56 [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-08-04 15:36:56 [restartedMain] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.context.ApplicationContextException: Failed to start bean 'webServerStartStop'
2025-08-04 15:36:56 [restartedMain] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-04 15:36:56 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-08-04 15:36:56 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-08-04 15:36:56 [restartedMain] INFO  o.s.b.a.l.ConditionEvaluationReportLogger - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2025-08-04 15:36:56 [restartedMain] ERROR o.s.b.d.LoggingFailureAnalysisReporter - 

***************************
APPLICATION FAILED TO START
***************************

Description:

Web server failed to start. Port 8080 was already in use.

Action:

Identify and stop the process that's listening on port 8080 or configure this application to listen on another port.

2025-08-04 15:42:04 [restartedMain] INFO  c.j.i.InventarioTiendaApplication - Starting InventarioTiendaApplication using Java 21.0.7 with PID 22064 (D:\DesarrolloSoftware\Java\inventario-tienda\build\classes\java\main started by josel in D:\DesarrolloSoftware\Java\inventario-tienda)
2025-08-04 15:42:04 [restartedMain] DEBUG c.j.i.InventarioTiendaApplication - Running with Spring Boot v3.5.2, Spring v6.2.8
2025-08-04 15:42:04 [restartedMain] INFO  c.j.i.InventarioTiendaApplication - The following 1 profile is active: "dev"
2025-08-04 15:42:05 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-08-04 15:42:05 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-08-04 15:42:05 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-04 15:42:06 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 89 ms. Found 5 JPA repository interfaces.
2025-08-04 15:42:07 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-08-04 15:42:07 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-08-04 15:42:07 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.42]
2025-08-04 15:42:07 [restartedMain] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-08-04 15:42:07 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 2335 ms
2025-08-04 15:42:07 [restartedMain] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-08-04 15:42:07 [restartedMain] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.18.Final
2025-08-04 15:42:07 [restartedMain] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-08-04 15:42:08 [restartedMain] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-04 15:42:08 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-08-04 15:42:08 [restartedMain] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@7a148a60
2025-08-04 15:42:08 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-08-04 15:42:08 [restartedMain] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQL8Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-04 15:42:08 [restartedMain] WARN  org.hibernate.orm.deprecation - HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
2025-08-04 15:42:08 [restartedMain] INFO  o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 8.0
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-08-04 15:42:09 [restartedMain] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-08-04 15:42:09 [restartedMain] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-04 15:42:09 [restartedMain] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-08-04 15:42:10 [restartedMain] INFO  c.jlzDev.inventario.security.JwtUtil - JwtUtil inicializado - Expiraci√≥n: 24h, Refresh: 30d, Clave: 856bits
2025-08-04 15:42:10 [restartedMain] DEBUG c.j.i.s.JwtAuthenticationFilter - Filter 'jwtAuthenticationFilter' configured for use
2025-08-04 15:42:11 [restartedMain] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-08-04 15:42:11 [restartedMain] INFO  o.s.s.c.a.a.c.InitializeAuthenticationProviderBeanManagerConfigurer$InitializeAuthenticationProviderManagerConfigurer - Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2025-08-04 15:42:11 [restartedMain] WARN  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used by Spring Security for automatically configuring username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider. If the current configuration is intentional, to turn off this warning, increase the logging level of 'org.springframework.security.config.annotation.authentication.configuration.InitializeUserDetailsBeanManagerConfigurer' to ERROR
2025-08-04 15:42:11 [restartedMain] WARN  o.s.s.c.a.w.c.AuthorizeHttpRequestsConfigurer$AuthorizationManagerRequestMatcherRegistry - One of the patterns in [GET, /api/productos/**] is missing a leading slash. This is discouraged; please include the leading slash in all your request matcher patterns. In future versions of Spring Security, leaving out the leading slash will result in an exception.
2025-08-04 15:42:11 [restartedMain] WARN  o.s.s.c.a.w.c.AuthorizeHttpRequestsConfigurer$AuthorizationManagerRequestMatcherRegistry - One of the patterns in [POST, /api/productos/**] is missing a leading slash. This is discouraged; please include the leading slash in all your request matcher patterns. In future versions of Spring Security, leaving out the leading slash will result in an exception.
2025-08-04 15:42:11 [restartedMain] WARN  o.s.s.c.a.w.c.AuthorizeHttpRequestsConfigurer$AuthorizationManagerRequestMatcherRegistry - One of the patterns in [PUT, /api/productos/**] is missing a leading slash. This is discouraged; please include the leading slash in all your request matcher patterns. In future versions of Spring Security, leaving out the leading slash will result in an exception.
2025-08-04 15:42:11 [restartedMain] WARN  o.s.s.c.a.w.c.AuthorizeHttpRequestsConfigurer$AuthorizationManagerRequestMatcherRegistry - One of the patterns in [DELETE, /api/productos/**] is missing a leading slash. This is discouraged; please include the leading slash in all your request matcher patterns. In future versions of Spring Security, leaving out the leading slash will result in an exception.
2025-08-04 15:42:11 [restartedMain] WARN  o.s.s.c.a.w.c.AuthorizeHttpRequestsConfigurer$AuthorizationManagerRequestMatcherRegistry - One of the patterns in [GET, /api/categorias/**] is missing a leading slash. This is discouraged; please include the leading slash in all your request matcher patterns. In future versions of Spring Security, leaving out the leading slash will result in an exception.
2025-08-04 15:42:11 [restartedMain] WARN  o.s.s.c.a.w.c.AuthorizeHttpRequestsConfigurer$AuthorizationManagerRequestMatcherRegistry - One of the patterns in [POST, /api/categorias/**] is missing a leading slash. This is discouraged; please include the leading slash in all your request matcher patterns. In future versions of Spring Security, leaving out the leading slash will result in an exception.
2025-08-04 15:42:11 [restartedMain] WARN  o.s.s.c.a.w.c.AuthorizeHttpRequestsConfigurer$AuthorizationManagerRequestMatcherRegistry - One of the patterns in [PUT, /api/categorias/**] is missing a leading slash. This is discouraged; please include the leading slash in all your request matcher patterns. In future versions of Spring Security, leaving out the leading slash will result in an exception.
2025-08-04 15:42:11 [restartedMain] WARN  o.s.s.c.a.w.c.AuthorizeHttpRequestsConfigurer$AuthorizationManagerRequestMatcherRegistry - One of the patterns in [DELETE, /api/categorias/**] is missing a leading slash. This is discouraged; please include the leading slash in all your request matcher patterns. In future versions of Spring Security, leaving out the leading slash will result in an exception.
2025-08-04 15:42:11 [restartedMain] WARN  o.s.s.c.a.w.c.AuthorizeHttpRequestsConfigurer$AuthorizationManagerRequestMatcherRegistry - One of the patterns in [GET, /api/movimientos/**] is missing a leading slash. This is discouraged; please include the leading slash in all your request matcher patterns. In future versions of Spring Security, leaving out the leading slash will result in an exception.
2025-08-04 15:42:11 [restartedMain] WARN  o.s.s.c.a.w.c.AuthorizeHttpRequestsConfigurer$AuthorizationManagerRequestMatcherRegistry - One of the patterns in [POST, /api/movimientos/**] is missing a leading slash. This is discouraged; please include the leading slash in all your request matcher patterns. In future versions of Spring Security, leaving out the leading slash will result in an exception.
2025-08-04 15:42:11 [restartedMain] DEBUG o.s.s.web.DefaultSecurityFilterChain - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CorsFilter, LogoutFilter, JwtAuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter
2025-08-04 15:42:12 [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-08-04 15:42:12 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2025-08-04 15:42:12 [restartedMain] INFO  c.j.i.InventarioTiendaApplication - Started InventarioTiendaApplication in 7.701 seconds (process running for 8.633)
2025-08-04 15:44:47 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-08-04 15:44:47 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-08-04 15:44:47 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 8 ms
2025-08-04 15:44:47 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /api/auth/login
2025-08-04 15:44:47 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/login
2025-08-04 15:44:47 [http-nio-8080-exec-2] DEBUG c.j.i.s.JwtAuthenticationFilter - Procesando request: POST /api/auth/login
2025-08-04 15:44:47 [http-nio-8080-exec-2] DEBUG c.j.i.s.JwtAuthenticationFilter - Endpoint p√∫blico detectado: /api/auth/login. Saltando validaci√≥n JWT
2025-08-04 15:44:47 [http-nio-8080-exec-2] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-04 15:44:47 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/login
2025-08-04 15:44:47 [http-nio-8080-exec-2] INFO  c.j.i.controller.AuthController - POST /api/auth/login - Intento de login: username=admin, deviceInfo=Web - Win32 - es-419 - Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWeb, rememberMe=false
2025-08-04 15:44:47 [http-nio-8080-exec-2] DEBUG c.j.i.s.UserDetailsServiceImpl - Intentando cargar usuario por username o email: admin
2025-08-04 15:44:47 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.activo,
        u1_0.email,
        u1_0.fecha_creacion,
        u1_0.nombre_completo,
        u1_0.password,
        u1_0.rol_id,
        u1_0.username 
    from
        usuarios u1_0 
    where
        (
            u1_0.username=? 
            or u1_0.email=?
        ) 
        and u1_0.activo=1
2025-08-04 15:44:47 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.descripcion,
        r1_0.fecha_creacion,
        r1_0.nombre 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-04 15:44:47 [http-nio-8080-exec-2] DEBUG c.j.i.s.UserDetailsServiceImpl - Autoridades creadas para usuario admin: [ROLE_ADMIN, ADMIN, READ, WRITE, DELETE, ADMIN, REPORTS, USERS, INVENTORY]
2025-08-04 15:44:47 [http-nio-8080-exec-2] INFO  c.j.i.s.UserDetailsServiceImpl - Usuario cargado exitosamente por username/email: admin (username real: admin) con rol: ADMIN
2025-08-04 15:44:47 [http-nio-8080-exec-2] DEBUG c.j.i.service.UsuarioService - Obteniendo usuario por username: admin
2025-08-04 15:44:48 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.activo,
        u1_0.email,
        u1_0.fecha_creacion,
        u1_0.nombre_completo,
        u1_0.password,
        u1_0.rol_id,
        u1_0.username 
    from
        usuarios u1_0 
    where
        u1_0.username=?
2025-08-04 15:44:48 [http-nio-8080-exec-2] DEBUG c.jlzDev.inventario.security.JwtUtil - Generando access token para usuario: admin
2025-08-04 15:44:48 [http-nio-8080-exec-2] INFO  c.jlzDev.inventario.security.JwtUtil - Access token generado exitosamente para usuario: admin
2025-08-04 15:44:48 [http-nio-8080-exec-2] DEBUG c.jlzDev.inventario.security.JwtUtil - Generando refresh token para usuario: admin
2025-08-04 15:44:48 [http-nio-8080-exec-2] INFO  c.jlzDev.inventario.security.JwtUtil - Refresh token generado exitosamente para usuario: admin
2025-08-04 15:44:48 [http-nio-8080-exec-2] DEBUG c.j.i.s.UserDetailsServiceImpl - Cargando usuario por username: admin
2025-08-04 15:44:48 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.activo,
        u1_0.email,
        u1_0.fecha_creacion,
        u1_0.nombre_completo,
        u1_0.password,
        u1_0.rol_id,
        u1_0.username 
    from
        usuarios u1_0 
    where
        u1_0.username=? 
        and u1_0.activo
2025-08-04 15:44:48 [http-nio-8080-exec-2] DEBUG c.j.i.s.UserDetailsServiceImpl - Autoridades creadas para usuario admin: [ROLE_ADMIN, ADMIN, READ, WRITE, DELETE, ADMIN, REPORTS, USERS, INVENTORY]
2025-08-04 15:44:48 [http-nio-8080-exec-2] INFO  c.j.i.s.UserDetailsServiceImpl - Usuario cargado exitosamente: admin con rol: ADMIN
2025-08-04 15:44:48 [http-nio-8080-exec-2] INFO  c.j.i.controller.AuthController - Login exitoso para usuario: admin con sessionId: admin_1754340288321_9fc668e9
2025-08-04 15:44:48 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /api/productos
2025-08-04 15:44:48 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /api/usuarios
2025-08-04 15:44:48 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /api/movimientos
2025-08-04 15:44:48 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/productos
2025-08-04 15:44:48 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/usuarios
2025-08-04 15:44:48 [http-nio-8080-exec-7] DEBUG c.j.i.s.JwtAuthenticationFilter - Procesando request: GET /api/usuarios
2025-08-04 15:44:48 [http-nio-8080-exec-6] DEBUG c.j.i.s.JwtAuthenticationFilter - Procesando request: GET /api/productos
2025-08-04 15:44:48 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/movimientos
2025-08-04 15:44:48 [http-nio-8080-exec-7] DEBUG c.j.i.s.UserDetailsServiceImpl - Cargando usuario por username: admin
2025-08-04 15:44:48 [http-nio-8080-exec-8] DEBUG c.j.i.s.JwtAuthenticationFilter - Procesando request: GET /api/movimientos
2025-08-04 15:44:48 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.activo,
        u1_0.email,
        u1_0.fecha_creacion,
        u1_0.nombre_completo,
        u1_0.password,
        u1_0.rol_id,
        u1_0.username 
    from
        usuarios u1_0 
    where
        u1_0.username=? 
        and u1_0.activo
2025-08-04 15:44:48 [http-nio-8080-exec-8] DEBUG c.j.i.s.UserDetailsServiceImpl - Cargando usuario por username: admin
2025-08-04 15:44:48 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.descripcion,
        r1_0.fecha_creacion,
        r1_0.nombre 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-04 15:44:48 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.activo,
        u1_0.email,
        u1_0.fecha_creacion,
        u1_0.nombre_completo,
        u1_0.password,
        u1_0.rol_id,
        u1_0.username 
    from
        usuarios u1_0 
    where
        u1_0.username=? 
        and u1_0.activo
2025-08-04 15:44:48 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.descripcion,
        r1_0.fecha_creacion,
        r1_0.nombre 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-04 15:44:48 [http-nio-8080-exec-7] DEBUG c.j.i.s.UserDetailsServiceImpl - Autoridades creadas para usuario admin: [ROLE_ADMIN, ADMIN, READ, WRITE, DELETE, ADMIN, REPORTS, USERS, INVENTORY]
2025-08-04 15:44:48 [http-nio-8080-exec-7] INFO  c.j.i.s.UserDetailsServiceImpl - Usuario cargado exitosamente: admin con rol: ADMIN
2025-08-04 15:44:48 [http-nio-8080-exec-8] DEBUG c.j.i.s.UserDetailsServiceImpl - Autoridades creadas para usuario admin: [ROLE_ADMIN, ADMIN, READ, WRITE, DELETE, ADMIN, REPORTS, USERS, INVENTORY]
2025-08-04 15:44:48 [http-nio-8080-exec-8] INFO  c.j.i.s.UserDetailsServiceImpl - Usuario cargado exitosamente: admin con rol: ADMIN
2025-08-04 15:44:48 [http-nio-8080-exec-8] DEBUG c.j.i.s.JwtAuthenticationFilter - Usuario autenticado exitosamente: admin para request: /api/movimientos
2025-08-04 15:44:48 [http-nio-8080-exec-7] DEBUG c.j.i.s.JwtAuthenticationFilter - Usuario autenticado exitosamente: admin para request: /api/usuarios
2025-08-04 15:44:48 [http-nio-8080-exec-6] DEBUG c.j.i.s.UserDetailsServiceImpl - Cargando usuario por username: admin
2025-08-04 15:44:48 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/movimientos
2025-08-04 15:44:48 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.activo,
        u1_0.email,
        u1_0.fecha_creacion,
        u1_0.nombre_completo,
        u1_0.password,
        u1_0.rol_id,
        u1_0.username 
    from
        usuarios u1_0 
    where
        u1_0.username=? 
        and u1_0.activo
2025-08-04 15:44:48 [http-nio-8080-exec-8] INFO  c.j.i.c.MovimientoController - GET /api/movimientos - Solicitando todos los movimientos
2025-08-04 15:44:48 [http-nio-8080-exec-8] DEBUG c.j.i.service.MovimientoService - Obteniendo todos los movimientos
2025-08-04 15:44:48 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.descripcion,
        r1_0.fecha_creacion,
        r1_0.nombre 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-04 15:44:48 [http-nio-8080-exec-6] DEBUG c.j.i.s.UserDetailsServiceImpl - Autoridades creadas para usuario admin: [ROLE_ADMIN, ADMIN, READ, WRITE, DELETE, ADMIN, REPORTS, USERS, INVENTORY]
2025-08-04 15:44:48 [http-nio-8080-exec-6] INFO  c.j.i.s.UserDetailsServiceImpl - Usuario cargado exitosamente: admin con rol: ADMIN
2025-08-04 15:44:48 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/usuarios
2025-08-04 15:44:48 [http-nio-8080-exec-6] DEBUG c.j.i.s.JwtAuthenticationFilter - Usuario autenticado exitosamente: admin para request: /api/productos
2025-08-04 15:44:48 [http-nio-8080-exec-7] INFO  c.j.i.controller.UsuarioController - GET /api/usuarios - Solicitando todos los usuarios
2025-08-04 15:44:48 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        m1_0.id,
        m1_0.cantidad,
        m1_0.fecha,
        m1_0.motivo,
        m1_0.producto_id,
        m1_0.tipo_movimiento,
        m1_0.usuario_id 
    from
        movimientos m1_0
2025-08-04 15:44:48 [http-nio-8080-exec-7] DEBUG c.j.i.service.UsuarioService - Obteniendo todos los usuarios
2025-08-04 15:44:48 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.activo,
        u1_0.email,
        u1_0.fecha_creacion,
        u1_0.nombre_completo,
        u1_0.password,
        u1_0.rol_id,
        u1_0.username 
    from
        usuarios u1_0
2025-08-04 15:44:48 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.descripcion,
        r1_0.fecha_creacion,
        r1_0.nombre 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-04 15:44:48 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.descripcion,
        r1_0.fecha_creacion,
        r1_0.nombre 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-04 15:44:48 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/productos
2025-08-04 15:44:48 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.descripcion,
        r1_0.fecha_creacion,
        r1_0.nombre 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-04 15:44:48 [http-nio-8080-exec-6] INFO  c.j.i.controller.ProductoController - GET /api/productos - Solicitando todos los productos
2025-08-04 15:44:48 [http-nio-8080-exec-6] DEBUG c.j.i.service.ProductoService - Obteniendo todos los productos
2025-08-04 15:44:48 [http-nio-8080-exec-7] INFO  c.j.i.controller.UsuarioController - GET /api/usuarios - Encontrados 3 usuarios
2025-08-04 15:44:48 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria_id,
        p1_0.descripcion,
        p1_0.fecha_actualizacion,
        p1_0.fecha_creacion,
        p1_0.imagen,
        p1_0.nombre,
        p1_0.precio,
        p1_0.stock_actual,
        p1_0.stock_minimo 
    from
        productos p1_0
2025-08-04 15:44:48 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria_id,
        c1_0.id,
        c1_0.descripcion,
        c1_0.fecha_creacion,
        c1_0.nombre,
        p1_0.descripcion,
        p1_0.fecha_actualizacion,
        p1_0.fecha_creacion,
        p1_0.imagen,
        p1_0.nombre,
        p1_0.precio,
        p1_0.stock_actual,
        p1_0.stock_minimo 
    from
        productos p1_0 
    join
        categorias c1_0 
            on c1_0.id=p1_0.categoria_id 
    where
        p1_0.id=?
2025-08-04 15:44:48 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.descripcion,
        c1_0.fecha_creacion,
        c1_0.nombre 
    from
        categorias c1_0 
    where
        c1_0.id=?
2025-08-04 15:44:48 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.activo,
        u1_0.email,
        u1_0.fecha_creacion,
        u1_0.nombre_completo,
        u1_0.password,
        u1_0.rol_id,
        r1_0.id,
        r1_0.descripcion,
        r1_0.fecha_creacion,
        r1_0.nombre,
        u1_0.username 
    from
        usuarios u1_0 
    join
        roles r1_0 
            on r1_0.id=u1_0.rol_id 
    where
        u1_0.id=?
2025-08-04 15:44:48 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria_id,
        c1_0.id,
        c1_0.descripcion,
        c1_0.fecha_creacion,
        c1_0.nombre,
        p1_0.descripcion,
        p1_0.fecha_actualizacion,
        p1_0.fecha_creacion,
        p1_0.imagen,
        p1_0.nombre,
        p1_0.precio,
        p1_0.stock_actual,
        p1_0.stock_minimo 
    from
        productos p1_0 
    join
        categorias c1_0 
            on c1_0.id=p1_0.categoria_id 
    where
        p1_0.id=?
2025-08-04 15:44:48 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.activo,
        u1_0.email,
        u1_0.fecha_creacion,
        u1_0.nombre_completo,
        u1_0.password,
        u1_0.rol_id,
        r1_0.id,
        r1_0.descripcion,
        r1_0.fecha_creacion,
        r1_0.nombre,
        u1_0.username 
    from
        usuarios u1_0 
    join
        roles r1_0 
            on r1_0.id=u1_0.rol_id 
    where
        u1_0.id=?
2025-08-04 15:44:48 [http-nio-8080-exec-8] INFO  c.j.i.c.MovimientoController - GET /api/movimientos - Encontrados 4 movimientos
2025-08-04 15:44:48 [http-nio-8080-exec-6] INFO  c.j.i.controller.ProductoController - GET /api/productos - Encontrados 3 productos
2025-08-04 15:45:57 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/movimientos
2025-08-04 15:45:57 [http-nio-8080-exec-2] DEBUG c.j.i.s.JwtAuthenticationFilter - Procesando request: GET /api/movimientos
2025-08-04 15:45:57 [http-nio-8080-exec-2] DEBUG c.j.i.s.UserDetailsServiceImpl - Cargando usuario por username: admin
2025-08-04 15:45:57 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.activo,
        u1_0.email,
        u1_0.fecha_creacion,
        u1_0.nombre_completo,
        u1_0.password,
        u1_0.rol_id,
        u1_0.username 
    from
        usuarios u1_0 
    where
        u1_0.username=? 
        and u1_0.activo
2025-08-04 15:45:57 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.descripcion,
        r1_0.fecha_creacion,
        r1_0.nombre 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-04 15:45:57 [http-nio-8080-exec-2] DEBUG c.j.i.s.UserDetailsServiceImpl - Autoridades creadas para usuario admin: [ROLE_ADMIN, ADMIN, READ, WRITE, DELETE, ADMIN, REPORTS, USERS, INVENTORY]
2025-08-04 15:45:57 [http-nio-8080-exec-2] INFO  c.j.i.s.UserDetailsServiceImpl - Usuario cargado exitosamente: admin con rol: ADMIN
2025-08-04 15:45:57 [http-nio-8080-exec-2] DEBUG c.j.i.s.JwtAuthenticationFilter - Usuario autenticado exitosamente: admin para request: /api/movimientos
2025-08-04 15:45:57 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/movimientos
2025-08-04 15:45:57 [http-nio-8080-exec-2] INFO  c.j.i.c.MovimientoController - GET /api/movimientos - Solicitando todos los movimientos
2025-08-04 15:45:57 [http-nio-8080-exec-2] DEBUG c.j.i.service.MovimientoService - Obteniendo todos los movimientos
2025-08-04 15:45:57 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        m1_0.id,
        m1_0.cantidad,
        m1_0.fecha,
        m1_0.motivo,
        m1_0.producto_id,
        m1_0.tipo_movimiento,
        m1_0.usuario_id 
    from
        movimientos m1_0
2025-08-04 15:45:57 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria_id,
        c1_0.id,
        c1_0.descripcion,
        c1_0.fecha_creacion,
        c1_0.nombre,
        p1_0.descripcion,
        p1_0.fecha_actualizacion,
        p1_0.fecha_creacion,
        p1_0.imagen,
        p1_0.nombre,
        p1_0.precio,
        p1_0.stock_actual,
        p1_0.stock_minimo 
    from
        productos p1_0 
    join
        categorias c1_0 
            on c1_0.id=p1_0.categoria_id 
    where
        p1_0.id=?
2025-08-04 15:45:57 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.activo,
        u1_0.email,
        u1_0.fecha_creacion,
        u1_0.nombre_completo,
        u1_0.password,
        u1_0.rol_id,
        r1_0.id,
        r1_0.descripcion,
        r1_0.fecha_creacion,
        r1_0.nombre,
        u1_0.username 
    from
        usuarios u1_0 
    join
        roles r1_0 
            on r1_0.id=u1_0.rol_id 
    where
        u1_0.id=?
2025-08-04 15:45:57 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria_id,
        c1_0.id,
        c1_0.descripcion,
        c1_0.fecha_creacion,
        c1_0.nombre,
        p1_0.descripcion,
        p1_0.fecha_actualizacion,
        p1_0.fecha_creacion,
        p1_0.imagen,
        p1_0.nombre,
        p1_0.precio,
        p1_0.stock_actual,
        p1_0.stock_minimo 
    from
        productos p1_0 
    join
        categorias c1_0 
            on c1_0.id=p1_0.categoria_id 
    where
        p1_0.id=?
2025-08-04 15:45:57 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.activo,
        u1_0.email,
        u1_0.fecha_creacion,
        u1_0.nombre_completo,
        u1_0.password,
        u1_0.rol_id,
        r1_0.id,
        r1_0.descripcion,
        r1_0.fecha_creacion,
        r1_0.nombre,
        u1_0.username 
    from
        usuarios u1_0 
    join
        roles r1_0 
            on r1_0.id=u1_0.rol_id 
    where
        u1_0.id=?
2025-08-04 15:45:57 [http-nio-8080-exec-2] INFO  c.j.i.c.MovimientoController - GET /api/movimientos - Encontrados 4 movimientos
2025-08-04 15:45:57 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /api/movimientos/estadisticas?inicio=2025-07-04T15:45&fin=2025-08-04T15:45
2025-08-04 15:45:57 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/movimientos/estadisticas?inicio=2025-07-04T15:45&fin=2025-08-04T15:45
2025-08-04 15:45:57 [http-nio-8080-exec-5] DEBUG c.j.i.s.JwtAuthenticationFilter - Procesando request: GET /api/movimientos/estadisticas
2025-08-04 15:45:57 [http-nio-8080-exec-5] DEBUG c.j.i.s.UserDetailsServiceImpl - Cargando usuario por username: admin
2025-08-04 15:45:57 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.activo,
        u1_0.email,
        u1_0.fecha_creacion,
        u1_0.nombre_completo,
        u1_0.password,
        u1_0.rol_id,
        u1_0.username 
    from
        usuarios u1_0 
    where
        u1_0.username=? 
        and u1_0.activo
2025-08-04 15:45:57 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.descripcion,
        r1_0.fecha_creacion,
        r1_0.nombre 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-04 15:45:57 [http-nio-8080-exec-5] DEBUG c.j.i.s.UserDetailsServiceImpl - Autoridades creadas para usuario admin: [ROLE_ADMIN, ADMIN, READ, WRITE, DELETE, ADMIN, REPORTS, USERS, INVENTORY]
2025-08-04 15:45:57 [http-nio-8080-exec-5] INFO  c.j.i.s.UserDetailsServiceImpl - Usuario cargado exitosamente: admin con rol: ADMIN
2025-08-04 15:45:57 [http-nio-8080-exec-5] DEBUG c.j.i.s.JwtAuthenticationFilter - Usuario autenticado exitosamente: admin para request: /api/movimientos/estadisticas
2025-08-04 15:45:57 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/movimientos/estadisticas?inicio=2025-07-04T15:45&fin=2025-08-04T15:45
2025-08-04 15:45:57 [http-nio-8080-exec-5] INFO  c.j.i.c.MovimientoController - GET /api/movimientos/estadisticas?inicio=2025-07-04T15:45&fin=2025-08-04T15:45 - Solicitando estad√≠sticas
2025-08-04 15:45:57 [http-nio-8080-exec-5] DEBUG c.j.i.service.MovimientoService - Obteniendo estad√≠sticas de movimientos por periodo: 2025-07-04T15:45 - 2025-08-04T15:45
2025-08-04 15:45:57 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        m1_0.tipo_movimiento,
        count(m1_0.id),
        sum(m1_0.cantidad) 
    from
        movimientos m1_0 
    where
        m1_0.fecha between ? and ? 
    group by
        m1_0.tipo_movimiento
2025-08-04 15:45:57 [http-nio-8080-exec-5] INFO  c.j.i.c.MovimientoController - GET /api/movimientos/estadisticas - Estad√≠sticas obtenidas
2025-08-04 15:46:23 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /api/usuarios/activos
2025-08-04 15:46:23 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/usuarios/activos
2025-08-04 15:46:23 [http-nio-8080-exec-3] DEBUG c.j.i.s.JwtAuthenticationFilter - Procesando request: GET /api/usuarios/activos
2025-08-04 15:46:23 [http-nio-8080-exec-3] DEBUG c.j.i.s.UserDetailsServiceImpl - Cargando usuario por username: admin
2025-08-04 15:46:23 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.activo,
        u1_0.email,
        u1_0.fecha_creacion,
        u1_0.nombre_completo,
        u1_0.password,
        u1_0.rol_id,
        u1_0.username 
    from
        usuarios u1_0 
    where
        u1_0.username=? 
        and u1_0.activo
2025-08-04 15:46:23 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.descripcion,
        r1_0.fecha_creacion,
        r1_0.nombre 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-04 15:46:23 [http-nio-8080-exec-3] DEBUG c.j.i.s.UserDetailsServiceImpl - Autoridades creadas para usuario admin: [ROLE_ADMIN, ADMIN, READ, WRITE, DELETE, ADMIN, REPORTS, USERS, INVENTORY]
2025-08-04 15:46:23 [http-nio-8080-exec-3] INFO  c.j.i.s.UserDetailsServiceImpl - Usuario cargado exitosamente: admin con rol: ADMIN
2025-08-04 15:46:23 [http-nio-8080-exec-3] DEBUG c.j.i.s.JwtAuthenticationFilter - Usuario autenticado exitosamente: admin para request: /api/usuarios/activos
2025-08-04 15:46:23 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/usuarios/activos
2025-08-04 15:46:23 [http-nio-8080-exec-3] INFO  c.j.i.controller.UsuarioController - GET /api/usuarios/activos - Solicitando usuarios activos
2025-08-04 15:46:23 [http-nio-8080-exec-3] DEBUG c.j.i.service.UsuarioService - Obteniendo usuarios activos
2025-08-04 15:46:23 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.activo,
        u1_0.email,
        u1_0.fecha_creacion,
        u1_0.nombre_completo,
        u1_0.password,
        u1_0.rol_id,
        u1_0.username 
    from
        usuarios u1_0 
    where
        u1_0.activo
2025-08-04 15:46:23 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.descripcion,
        r1_0.fecha_creacion,
        r1_0.nombre 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-04 15:46:23 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.descripcion,
        r1_0.fecha_creacion,
        r1_0.nombre 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-04 15:46:23 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.descripcion,
        r1_0.fecha_creacion,
        r1_0.nombre 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-04 15:46:23 [http-nio-8080-exec-3] INFO  c.j.i.controller.UsuarioController - GET /api/usuarios/activos - Encontrados 3 usuarios activos
2025-08-04 15:47:25 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /api/movimientos/entrada
2025-08-04 15:47:25 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/movimientos/entrada
2025-08-04 15:47:25 [http-nio-8080-exec-6] DEBUG c.j.i.s.JwtAuthenticationFilter - Procesando request: POST /api/movimientos/entrada
2025-08-04 15:47:25 [http-nio-8080-exec-6] DEBUG c.j.i.s.UserDetailsServiceImpl - Cargando usuario por username: admin
2025-08-04 15:47:25 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.activo,
        u1_0.email,
        u1_0.fecha_creacion,
        u1_0.nombre_completo,
        u1_0.password,
        u1_0.rol_id,
        u1_0.username 
    from
        usuarios u1_0 
    where
        u1_0.username=? 
        and u1_0.activo
2025-08-04 15:47:25 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.descripcion,
        r1_0.fecha_creacion,
        r1_0.nombre 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-04 15:47:25 [http-nio-8080-exec-6] DEBUG c.j.i.s.UserDetailsServiceImpl - Autoridades creadas para usuario admin: [ROLE_ADMIN, ADMIN, READ, WRITE, DELETE, ADMIN, REPORTS, USERS, INVENTORY]
2025-08-04 15:47:25 [http-nio-8080-exec-6] INFO  c.j.i.s.UserDetailsServiceImpl - Usuario cargado exitosamente: admin con rol: ADMIN
2025-08-04 15:47:25 [http-nio-8080-exec-6] DEBUG c.j.i.s.JwtAuthenticationFilter - Usuario autenticado exitosamente: admin para request: /api/movimientos/entrada
2025-08-04 15:47:25 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/movimientos/entrada
2025-08-04 15:47:25 [http-nio-8080-exec-6] INFO  c.j.i.c.MovimientoController - POST /api/movimientos/entrada - Creando entrada: MovimientoRequest{producto=1, usuario=1, tipo=ENTRADA, cantidad=25}
2025-08-04 15:47:25 [http-nio-8080-exec-6] WARN  c.j.i.c.MovimientoController - POST /api/movimientos/entrada - Motivo no coherente con entrada: Ajuste de inventario positivo
2025-08-04 15:47:42 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/movimientos/entrada
2025-08-04 15:47:42 [http-nio-8080-exec-1] DEBUG c.j.i.s.JwtAuthenticationFilter - Procesando request: POST /api/movimientos/entrada
2025-08-04 15:47:42 [http-nio-8080-exec-1] DEBUG c.j.i.s.UserDetailsServiceImpl - Cargando usuario por username: admin
2025-08-04 15:47:42 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.activo,
        u1_0.email,
        u1_0.fecha_creacion,
        u1_0.nombre_completo,
        u1_0.password,
        u1_0.rol_id,
        u1_0.username 
    from
        usuarios u1_0 
    where
        u1_0.username=? 
        and u1_0.activo
2025-08-04 15:47:42 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.descripcion,
        r1_0.fecha_creacion,
        r1_0.nombre 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-04 15:47:43 [http-nio-8080-exec-1] DEBUG c.j.i.s.UserDetailsServiceImpl - Autoridades creadas para usuario admin: [ROLE_ADMIN, ADMIN, READ, WRITE, DELETE, ADMIN, REPORTS, USERS, INVENTORY]
2025-08-04 15:47:43 [http-nio-8080-exec-1] INFO  c.j.i.s.UserDetailsServiceImpl - Usuario cargado exitosamente: admin con rol: ADMIN
2025-08-04 15:47:43 [http-nio-8080-exec-1] DEBUG c.j.i.s.JwtAuthenticationFilter - Usuario autenticado exitosamente: admin para request: /api/movimientos/entrada
2025-08-04 15:47:43 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/movimientos/entrada
2025-08-04 15:47:43 [http-nio-8080-exec-1] INFO  c.j.i.c.MovimientoController - POST /api/movimientos/entrada - Creando entrada: MovimientoRequest{producto=1, usuario=1, tipo=ENTRADA, cantidad=25}
2025-08-04 15:47:43 [http-nio-8080-exec-1] WARN  c.j.i.c.MovimientoController - POST /api/movimientos/entrada - Motivo no coherente con entrada: Ajuste de inventario positivo +
2025-08-04 15:48:59 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/movimientos
2025-08-04 15:48:59 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/usuarios
2025-08-04 15:48:59 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/productos
2025-08-04 15:48:59 [http-nio-8080-exec-10] DEBUG c.j.i.s.JwtAuthenticationFilter - Procesando request: GET /api/movimientos
2025-08-04 15:48:59 [http-nio-8080-exec-2] DEBUG c.j.i.s.JwtAuthenticationFilter - Procesando request: GET /api/usuarios
2025-08-04 15:48:59 [http-nio-8080-exec-9] DEBUG c.j.i.s.JwtAuthenticationFilter - Procesando request: GET /api/productos
2025-08-04 15:48:59 [http-nio-8080-exec-10] DEBUG c.j.i.s.UserDetailsServiceImpl - Cargando usuario por username: admin
2025-08-04 15:48:59 [http-nio-8080-exec-9] DEBUG c.j.i.s.UserDetailsServiceImpl - Cargando usuario por username: admin
2025-08-04 15:48:59 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.activo,
        u1_0.email,
        u1_0.fecha_creacion,
        u1_0.nombre_completo,
        u1_0.password,
        u1_0.rol_id,
        u1_0.username 
    from
        usuarios u1_0 
    where
        u1_0.username=? 
        and u1_0.activo
2025-08-04 15:48:59 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.activo,
        u1_0.email,
        u1_0.fecha_creacion,
        u1_0.nombre_completo,
        u1_0.password,
        u1_0.rol_id,
        u1_0.username 
    from
        usuarios u1_0 
    where
        u1_0.username=? 
        and u1_0.activo
2025-08-04 15:48:59 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.descripcion,
        r1_0.fecha_creacion,
        r1_0.nombre 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-04 15:48:59 [http-nio-8080-exec-2] DEBUG c.j.i.s.UserDetailsServiceImpl - Cargando usuario por username: admin
2025-08-04 15:48:59 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.descripcion,
        r1_0.fecha_creacion,
        r1_0.nombre 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-04 15:48:59 [http-nio-8080-exec-9] DEBUG c.j.i.s.UserDetailsServiceImpl - Autoridades creadas para usuario admin: [ROLE_ADMIN, ADMIN, READ, WRITE, DELETE, ADMIN, REPORTS, USERS, INVENTORY]
2025-08-04 15:48:59 [http-nio-8080-exec-9] INFO  c.j.i.s.UserDetailsServiceImpl - Usuario cargado exitosamente: admin con rol: ADMIN
2025-08-04 15:48:59 [http-nio-8080-exec-10] DEBUG c.j.i.s.UserDetailsServiceImpl - Autoridades creadas para usuario admin: [ROLE_ADMIN, ADMIN, READ, WRITE, DELETE, ADMIN, REPORTS, USERS, INVENTORY]
2025-08-04 15:48:59 [http-nio-8080-exec-10] INFO  c.j.i.s.UserDetailsServiceImpl - Usuario cargado exitosamente: admin con rol: ADMIN
2025-08-04 15:48:59 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.activo,
        u1_0.email,
        u1_0.fecha_creacion,
        u1_0.nombre_completo,
        u1_0.password,
        u1_0.rol_id,
        u1_0.username 
    from
        usuarios u1_0 
    where
        u1_0.username=? 
        and u1_0.activo
2025-08-04 15:48:59 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.descripcion,
        r1_0.fecha_creacion,
        r1_0.nombre 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-04 15:48:59 [http-nio-8080-exec-9] DEBUG c.j.i.s.JwtAuthenticationFilter - Usuario autenticado exitosamente: admin para request: /api/productos
2025-08-04 15:48:59 [http-nio-8080-exec-2] DEBUG c.j.i.s.UserDetailsServiceImpl - Autoridades creadas para usuario admin: [ROLE_ADMIN, ADMIN, READ, WRITE, DELETE, ADMIN, REPORTS, USERS, INVENTORY]
2025-08-04 15:48:59 [http-nio-8080-exec-10] DEBUG c.j.i.s.JwtAuthenticationFilter - Usuario autenticado exitosamente: admin para request: /api/movimientos
2025-08-04 15:48:59 [http-nio-8080-exec-2] INFO  c.j.i.s.UserDetailsServiceImpl - Usuario cargado exitosamente: admin con rol: ADMIN
2025-08-04 15:48:59 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/productos
2025-08-04 15:48:59 [http-nio-8080-exec-2] DEBUG c.j.i.s.JwtAuthenticationFilter - Usuario autenticado exitosamente: admin para request: /api/usuarios
2025-08-04 15:48:59 [http-nio-8080-exec-9] INFO  c.j.i.controller.ProductoController - GET /api/productos - Solicitando todos los productos
2025-08-04 15:48:59 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/movimientos
2025-08-04 15:48:59 [http-nio-8080-exec-9] DEBUG c.j.i.service.ProductoService - Obteniendo todos los productos
2025-08-04 15:48:59 [http-nio-8080-exec-10] INFO  c.j.i.c.MovimientoController - GET /api/movimientos - Solicitando todos los movimientos
2025-08-04 15:48:59 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria_id,
        p1_0.descripcion,
        p1_0.fecha_actualizacion,
        p1_0.fecha_creacion,
        p1_0.imagen,
        p1_0.nombre,
        p1_0.precio,
        p1_0.stock_actual,
        p1_0.stock_minimo 
    from
        productos p1_0
2025-08-04 15:48:59 [http-nio-8080-exec-10] DEBUG c.j.i.service.MovimientoService - Obteniendo todos los movimientos
2025-08-04 15:48:59 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        m1_0.id,
        m1_0.cantidad,
        m1_0.fecha,
        m1_0.motivo,
        m1_0.producto_id,
        m1_0.tipo_movimiento,
        m1_0.usuario_id 
    from
        movimientos m1_0
2025-08-04 15:48:59 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/usuarios
2025-08-04 15:48:59 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.descripcion,
        c1_0.fecha_creacion,
        c1_0.nombre 
    from
        categorias c1_0 
    where
        c1_0.id=?
2025-08-04 15:48:59 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria_id,
        c1_0.id,
        c1_0.descripcion,
        c1_0.fecha_creacion,
        c1_0.nombre,
        p1_0.descripcion,
        p1_0.fecha_actualizacion,
        p1_0.fecha_creacion,
        p1_0.imagen,
        p1_0.nombre,
        p1_0.precio,
        p1_0.stock_actual,
        p1_0.stock_minimo 
    from
        productos p1_0 
    join
        categorias c1_0 
            on c1_0.id=p1_0.categoria_id 
    where
        p1_0.id=?
2025-08-04 15:48:59 [http-nio-8080-exec-2] INFO  c.j.i.controller.UsuarioController - GET /api/usuarios - Solicitando todos los usuarios
2025-08-04 15:48:59 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.activo,
        u1_0.email,
        u1_0.fecha_creacion,
        u1_0.nombre_completo,
        u1_0.password,
        u1_0.rol_id,
        r1_0.id,
        r1_0.descripcion,
        r1_0.fecha_creacion,
        r1_0.nombre,
        u1_0.username 
    from
        usuarios u1_0 
    join
        roles r1_0 
            on r1_0.id=u1_0.rol_id 
    where
        u1_0.id=?
2025-08-04 15:48:59 [http-nio-8080-exec-2] DEBUG c.j.i.service.UsuarioService - Obteniendo todos los usuarios
2025-08-04 15:48:59 [http-nio-8080-exec-9] INFO  c.j.i.controller.ProductoController - GET /api/productos - Encontrados 3 productos
2025-08-04 15:48:59 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.activo,
        u1_0.email,
        u1_0.fecha_creacion,
        u1_0.nombre_completo,
        u1_0.password,
        u1_0.rol_id,
        u1_0.username 
    from
        usuarios u1_0
2025-08-04 15:48:59 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.descripcion,
        r1_0.fecha_creacion,
        r1_0.nombre 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-04 15:48:59 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.descripcion,
        r1_0.fecha_creacion,
        r1_0.nombre 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-04 15:48:59 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria_id,
        c1_0.id,
        c1_0.descripcion,
        c1_0.fecha_creacion,
        c1_0.nombre,
        p1_0.descripcion,
        p1_0.fecha_actualizacion,
        p1_0.fecha_creacion,
        p1_0.imagen,
        p1_0.nombre,
        p1_0.precio,
        p1_0.stock_actual,
        p1_0.stock_minimo 
    from
        productos p1_0 
    join
        categorias c1_0 
            on c1_0.id=p1_0.categoria_id 
    where
        p1_0.id=?
2025-08-04 15:48:59 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.descripcion,
        r1_0.fecha_creacion,
        r1_0.nombre 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-04 15:48:59 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.activo,
        u1_0.email,
        u1_0.fecha_creacion,
        u1_0.nombre_completo,
        u1_0.password,
        u1_0.rol_id,
        r1_0.id,
        r1_0.descripcion,
        r1_0.fecha_creacion,
        r1_0.nombre,
        u1_0.username 
    from
        usuarios u1_0 
    join
        roles r1_0 
            on r1_0.id=u1_0.rol_id 
    where
        u1_0.id=?
2025-08-04 15:48:59 [http-nio-8080-exec-2] INFO  c.j.i.controller.UsuarioController - GET /api/usuarios - Encontrados 3 usuarios
2025-08-04 15:48:59 [http-nio-8080-exec-10] INFO  c.j.i.c.MovimientoController - GET /api/movimientos - Encontrados 4 movimientos
2025-08-04 15:49:19 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /api/auth/logout
2025-08-04 15:49:19 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/logout
2025-08-04 15:49:19 [http-nio-8080-exec-4] DEBUG c.j.i.s.JwtAuthenticationFilter - Procesando request: POST /api/auth/logout
2025-08-04 15:49:19 [http-nio-8080-exec-4] DEBUG c.j.i.s.UserDetailsServiceImpl - Cargando usuario por username: admin
2025-08-04 15:49:19 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.activo,
        u1_0.email,
        u1_0.fecha_creacion,
        u1_0.nombre_completo,
        u1_0.password,
        u1_0.rol_id,
        u1_0.username 
    from
        usuarios u1_0 
    where
        u1_0.username=? 
        and u1_0.activo
2025-08-04 15:49:19 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.descripcion,
        r1_0.fecha_creacion,
        r1_0.nombre 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-04 15:49:19 [http-nio-8080-exec-4] DEBUG c.j.i.s.UserDetailsServiceImpl - Autoridades creadas para usuario admin: [ROLE_ADMIN, ADMIN, READ, WRITE, DELETE, ADMIN, REPORTS, USERS, INVENTORY]
2025-08-04 15:49:19 [http-nio-8080-exec-4] INFO  c.j.i.s.UserDetailsServiceImpl - Usuario cargado exitosamente: admin con rol: ADMIN
2025-08-04 15:49:19 [http-nio-8080-exec-4] DEBUG c.j.i.s.JwtAuthenticationFilter - Usuario autenticado exitosamente: admin para request: /api/auth/logout
2025-08-04 15:49:19 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/logout
2025-08-04 15:49:19 [http-nio-8080-exec-4] INFO  c.j.i.controller.AuthController - POST /api/auth/logout - Solicitando logout
2025-08-04 15:49:19 [http-nio-8080-exec-4] INFO  c.j.i.controller.AuthController - Logout exitoso para usuario: admin con sessionId: admin_1754340288321_9fc668e9
2025-08-04 15:50:40 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/login
2025-08-04 15:50:40 [http-nio-8080-exec-6] DEBUG c.j.i.s.JwtAuthenticationFilter - Procesando request: POST /api/auth/login
2025-08-04 15:50:40 [http-nio-8080-exec-6] DEBUG c.j.i.s.JwtAuthenticationFilter - Endpoint p√∫blico detectado: /api/auth/login. Saltando validaci√≥n JWT
2025-08-04 15:50:40 [http-nio-8080-exec-6] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-04 15:50:40 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/login
2025-08-04 15:50:40 [http-nio-8080-exec-6] INFO  c.j.i.controller.AuthController - POST /api/auth/login - Intento de login: username=admin, deviceInfo=Web - Win32 - es-419 - Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWeb, rememberMe=false
2025-08-04 15:50:40 [http-nio-8080-exec-6] DEBUG c.j.i.s.UserDetailsServiceImpl - Intentando cargar usuario por username o email: admin
2025-08-04 15:50:40 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.activo,
        u1_0.email,
        u1_0.fecha_creacion,
        u1_0.nombre_completo,
        u1_0.password,
        u1_0.rol_id,
        u1_0.username 
    from
        usuarios u1_0 
    where
        (
            u1_0.username=? 
            or u1_0.email=?
        ) 
        and u1_0.activo=1
2025-08-04 15:50:40 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.descripcion,
        r1_0.fecha_creacion,
        r1_0.nombre 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-04 15:50:40 [http-nio-8080-exec-6] DEBUG c.j.i.s.UserDetailsServiceImpl - Autoridades creadas para usuario admin: [ROLE_ADMIN, ADMIN, READ, WRITE, DELETE, ADMIN, REPORTS, USERS, INVENTORY]
2025-08-04 15:50:40 [http-nio-8080-exec-6] INFO  c.j.i.s.UserDetailsServiceImpl - Usuario cargado exitosamente por username/email: admin (username real: admin) con rol: ADMIN
2025-08-04 15:50:40 [http-nio-8080-exec-6] DEBUG c.j.i.service.UsuarioService - Obteniendo usuario por username: admin
2025-08-04 15:50:40 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.activo,
        u1_0.email,
        u1_0.fecha_creacion,
        u1_0.nombre_completo,
        u1_0.password,
        u1_0.rol_id,
        u1_0.username 
    from
        usuarios u1_0 
    where
        u1_0.username=?
2025-08-04 15:50:41 [http-nio-8080-exec-6] DEBUG c.jlzDev.inventario.security.JwtUtil - Generando access token para usuario: admin
2025-08-04 15:50:41 [http-nio-8080-exec-6] INFO  c.jlzDev.inventario.security.JwtUtil - Access token generado exitosamente para usuario: admin
2025-08-04 15:50:41 [http-nio-8080-exec-6] DEBUG c.jlzDev.inventario.security.JwtUtil - Generando refresh token para usuario: admin
2025-08-04 15:50:41 [http-nio-8080-exec-6] INFO  c.jlzDev.inventario.security.JwtUtil - Refresh token generado exitosamente para usuario: admin
2025-08-04 15:50:41 [http-nio-8080-exec-6] DEBUG c.j.i.s.UserDetailsServiceImpl - Cargando usuario por username: admin
2025-08-04 15:50:41 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.activo,
        u1_0.email,
        u1_0.fecha_creacion,
        u1_0.nombre_completo,
        u1_0.password,
        u1_0.rol_id,
        u1_0.username 
    from
        usuarios u1_0 
    where
        u1_0.username=? 
        and u1_0.activo
2025-08-04 15:50:41 [http-nio-8080-exec-6] DEBUG c.j.i.s.UserDetailsServiceImpl - Autoridades creadas para usuario admin: [ROLE_ADMIN, ADMIN, READ, WRITE, DELETE, ADMIN, REPORTS, USERS, INVENTORY]
2025-08-04 15:50:41 [http-nio-8080-exec-6] INFO  c.j.i.s.UserDetailsServiceImpl - Usuario cargado exitosamente: admin con rol: ADMIN
2025-08-04 15:50:41 [http-nio-8080-exec-6] INFO  c.j.i.controller.AuthController - Login exitoso para usuario: admin con sessionId: admin_1754340641081_3607a992
2025-08-04 15:50:41 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/movimientos
2025-08-04 15:50:41 [http-nio-8080-exec-1] DEBUG c.j.i.s.JwtAuthenticationFilter - Procesando request: GET /api/movimientos
2025-08-04 15:50:41 [http-nio-8080-exec-1] DEBUG c.j.i.s.UserDetailsServiceImpl - Cargando usuario por username: admin
2025-08-04 15:50:41 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.activo,
        u1_0.email,
        u1_0.fecha_creacion,
        u1_0.nombre_completo,
        u1_0.password,
        u1_0.rol_id,
        u1_0.username 
    from
        usuarios u1_0 
    where
        u1_0.username=? 
        and u1_0.activo
2025-08-04 15:50:41 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.descripcion,
        r1_0.fecha_creacion,
        r1_0.nombre 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-04 15:50:41 [http-nio-8080-exec-1] DEBUG c.j.i.s.UserDetailsServiceImpl - Autoridades creadas para usuario admin: [ROLE_ADMIN, ADMIN, READ, WRITE, DELETE, ADMIN, REPORTS, USERS, INVENTORY]
2025-08-04 15:50:41 [http-nio-8080-exec-1] INFO  c.j.i.s.UserDetailsServiceImpl - Usuario cargado exitosamente: admin con rol: ADMIN
2025-08-04 15:50:41 [http-nio-8080-exec-1] DEBUG c.j.i.s.JwtAuthenticationFilter - Usuario autenticado exitosamente: admin para request: /api/movimientos
2025-08-04 15:50:41 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/movimientos
2025-08-04 15:50:41 [http-nio-8080-exec-1] INFO  c.j.i.c.MovimientoController - GET /api/movimientos - Solicitando todos los movimientos
2025-08-04 15:50:41 [http-nio-8080-exec-1] DEBUG c.j.i.service.MovimientoService - Obteniendo todos los movimientos
2025-08-04 15:50:41 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        m1_0.id,
        m1_0.cantidad,
        m1_0.fecha,
        m1_0.motivo,
        m1_0.producto_id,
        m1_0.tipo_movimiento,
        m1_0.usuario_id 
    from
        movimientos m1_0
2025-08-04 15:50:41 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria_id,
        c1_0.id,
        c1_0.descripcion,
        c1_0.fecha_creacion,
        c1_0.nombre,
        p1_0.descripcion,
        p1_0.fecha_actualizacion,
        p1_0.fecha_creacion,
        p1_0.imagen,
        p1_0.nombre,
        p1_0.precio,
        p1_0.stock_actual,
        p1_0.stock_minimo 
    from
        productos p1_0 
    join
        categorias c1_0 
            on c1_0.id=p1_0.categoria_id 
    where
        p1_0.id=?
2025-08-04 15:50:41 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.activo,
        u1_0.email,
        u1_0.fecha_creacion,
        u1_0.nombre_completo,
        u1_0.password,
        u1_0.rol_id,
        r1_0.id,
        r1_0.descripcion,
        r1_0.fecha_creacion,
        r1_0.nombre,
        u1_0.username 
    from
        usuarios u1_0 
    join
        roles r1_0 
            on r1_0.id=u1_0.rol_id 
    where
        u1_0.id=?
2025-08-04 15:50:41 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria_id,
        c1_0.id,
        c1_0.descripcion,
        c1_0.fecha_creacion,
        c1_0.nombre,
        p1_0.descripcion,
        p1_0.fecha_actualizacion,
        p1_0.fecha_creacion,
        p1_0.imagen,
        p1_0.nombre,
        p1_0.precio,
        p1_0.stock_actual,
        p1_0.stock_minimo 
    from
        productos p1_0 
    join
        categorias c1_0 
            on c1_0.id=p1_0.categoria_id 
    where
        p1_0.id=?
2025-08-04 15:50:41 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.activo,
        u1_0.email,
        u1_0.fecha_creacion,
        u1_0.nombre_completo,
        u1_0.password,
        u1_0.rol_id,
        r1_0.id,
        r1_0.descripcion,
        r1_0.fecha_creacion,
        r1_0.nombre,
        u1_0.username 
    from
        usuarios u1_0 
    join
        roles r1_0 
            on r1_0.id=u1_0.rol_id 
    where
        u1_0.id=?
2025-08-04 15:50:41 [http-nio-8080-exec-1] INFO  c.j.i.c.MovimientoController - GET /api/movimientos - Encontrados 4 movimientos
2025-08-04 15:51:04 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /api/movimientos/estadisticas?inicio=2025-07-04T15:51&fin=2025-08-04T15:51
2025-08-04 15:51:04 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/movimientos/estadisticas?inicio=2025-07-04T15:51&fin=2025-08-04T15:51
2025-08-04 15:51:04 [http-nio-8080-exec-2] DEBUG c.j.i.s.JwtAuthenticationFilter - Procesando request: GET /api/movimientos/estadisticas
2025-08-04 15:51:04 [http-nio-8080-exec-2] DEBUG c.j.i.s.UserDetailsServiceImpl - Cargando usuario por username: admin
2025-08-04 15:51:04 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.activo,
        u1_0.email,
        u1_0.fecha_creacion,
        u1_0.nombre_completo,
        u1_0.password,
        u1_0.rol_id,
        u1_0.username 
    from
        usuarios u1_0 
    where
        u1_0.username=? 
        and u1_0.activo
2025-08-04 15:51:04 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.descripcion,
        r1_0.fecha_creacion,
        r1_0.nombre 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-04 15:51:04 [http-nio-8080-exec-2] DEBUG c.j.i.s.UserDetailsServiceImpl - Autoridades creadas para usuario admin: [ROLE_ADMIN, ADMIN, READ, WRITE, DELETE, ADMIN, REPORTS, USERS, INVENTORY]
2025-08-04 15:51:04 [http-nio-8080-exec-2] INFO  c.j.i.s.UserDetailsServiceImpl - Usuario cargado exitosamente: admin con rol: ADMIN
2025-08-04 15:51:04 [http-nio-8080-exec-2] DEBUG c.j.i.s.JwtAuthenticationFilter - Usuario autenticado exitosamente: admin para request: /api/movimientos/estadisticas
2025-08-04 15:51:04 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/movimientos/estadisticas?inicio=2025-07-04T15:51&fin=2025-08-04T15:51
2025-08-04 15:51:04 [http-nio-8080-exec-2] INFO  c.j.i.c.MovimientoController - GET /api/movimientos/estadisticas?inicio=2025-07-04T15:51&fin=2025-08-04T15:51 - Solicitando estad√≠sticas
2025-08-04 15:51:04 [http-nio-8080-exec-2] DEBUG c.j.i.service.MovimientoService - Obteniendo estad√≠sticas de movimientos por periodo: 2025-07-04T15:51 - 2025-08-04T15:51
2025-08-04 15:51:04 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        m1_0.tipo_movimiento,
        count(m1_0.id),
        sum(m1_0.cantidad) 
    from
        movimientos m1_0 
    where
        m1_0.fecha between ? and ? 
    group by
        m1_0.tipo_movimiento
2025-08-04 15:51:04 [http-nio-8080-exec-2] INFO  c.j.i.c.MovimientoController - GET /api/movimientos/estadisticas - Estad√≠sticas obtenidas
2025-08-04 15:51:09 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/usuarios
2025-08-04 15:51:09 [http-nio-8080-exec-10] DEBUG c.j.i.s.JwtAuthenticationFilter - Procesando request: GET /api/usuarios
2025-08-04 15:51:09 [http-nio-8080-exec-10] DEBUG c.j.i.s.UserDetailsServiceImpl - Cargando usuario por username: admin
2025-08-04 15:51:09 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.activo,
        u1_0.email,
        u1_0.fecha_creacion,
        u1_0.nombre_completo,
        u1_0.password,
        u1_0.rol_id,
        u1_0.username 
    from
        usuarios u1_0 
    where
        u1_0.username=? 
        and u1_0.activo
2025-08-04 15:51:09 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.descripcion,
        r1_0.fecha_creacion,
        r1_0.nombre 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-04 15:51:09 [http-nio-8080-exec-10] DEBUG c.j.i.s.UserDetailsServiceImpl - Autoridades creadas para usuario admin: [ROLE_ADMIN, ADMIN, READ, WRITE, DELETE, ADMIN, REPORTS, USERS, INVENTORY]
2025-08-04 15:51:09 [http-nio-8080-exec-10] INFO  c.j.i.s.UserDetailsServiceImpl - Usuario cargado exitosamente: admin con rol: ADMIN
2025-08-04 15:51:09 [http-nio-8080-exec-10] DEBUG c.j.i.s.JwtAuthenticationFilter - Usuario autenticado exitosamente: admin para request: /api/usuarios
2025-08-04 15:51:09 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/usuarios
2025-08-04 15:51:09 [http-nio-8080-exec-10] INFO  c.j.i.controller.UsuarioController - GET /api/usuarios - Solicitando todos los usuarios
2025-08-04 15:51:09 [http-nio-8080-exec-10] DEBUG c.j.i.service.UsuarioService - Obteniendo todos los usuarios
2025-08-04 15:51:09 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.activo,
        u1_0.email,
        u1_0.fecha_creacion,
        u1_0.nombre_completo,
        u1_0.password,
        u1_0.rol_id,
        u1_0.username 
    from
        usuarios u1_0
2025-08-04 15:51:09 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.descripcion,
        r1_0.fecha_creacion,
        r1_0.nombre 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-04 15:51:09 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.descripcion,
        r1_0.fecha_creacion,
        r1_0.nombre 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-04 15:51:09 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.descripcion,
        r1_0.fecha_creacion,
        r1_0.nombre 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-04 15:51:09 [http-nio-8080-exec-10] INFO  c.j.i.controller.UsuarioController - GET /api/usuarios - Encontrados 3 usuarios
2025-08-04 15:51:10 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /api/movimientos/historial?pagina=0&tama%C3%B1o=10
2025-08-04 15:51:10 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/movimientos/historial?pagina=0&tama%C3%B1o=10
2025-08-04 15:51:10 [http-nio-8080-exec-4] DEBUG c.j.i.s.JwtAuthenticationFilter - Procesando request: GET /api/movimientos/historial
2025-08-04 15:51:10 [http-nio-8080-exec-4] DEBUG c.j.i.s.UserDetailsServiceImpl - Cargando usuario por username: admin
2025-08-04 15:51:10 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.activo,
        u1_0.email,
        u1_0.fecha_creacion,
        u1_0.nombre_completo,
        u1_0.password,
        u1_0.rol_id,
        u1_0.username 
    from
        usuarios u1_0 
    where
        u1_0.username=? 
        and u1_0.activo
2025-08-04 15:51:10 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.descripcion,
        r1_0.fecha_creacion,
        r1_0.nombre 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-04 15:51:10 [http-nio-8080-exec-4] DEBUG c.j.i.s.UserDetailsServiceImpl - Autoridades creadas para usuario admin: [ROLE_ADMIN, ADMIN, READ, WRITE, DELETE, ADMIN, REPORTS, USERS, INVENTORY]
2025-08-04 15:51:10 [http-nio-8080-exec-4] INFO  c.j.i.s.UserDetailsServiceImpl - Usuario cargado exitosamente: admin con rol: ADMIN
2025-08-04 15:51:10 [http-nio-8080-exec-4] DEBUG c.j.i.s.JwtAuthenticationFilter - Usuario autenticado exitosamente: admin para request: /api/movimientos/historial
2025-08-04 15:51:10 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/movimientos/historial?pagina=0&tama%C3%B1o=10
2025-08-04 15:51:10 [http-nio-8080-exec-4] INFO  c.j.i.c.MovimientoController - GET /api/movimientos/historial?pagina=0&tama√±o=10 - Solicitando historial paginado
2025-08-04 15:51:10 [http-nio-8080-exec-4] DEBUG c.j.i.service.MovimientoService - Obteniendo historial paginado - P√°gina: 0, Tama√±o: 10
2025-08-04 15:51:10 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        m1_0.id,
        m1_0.cantidad,
        m1_0.fecha,
        m1_0.motivo,
        m1_0.producto_id,
        m1_0.tipo_movimiento,
        m1_0.usuario_id 
    from
        movimientos m1_0 
    order by
        m1_0.fecha desc,
        m1_0.fecha desc 
    limit
        ?
2025-08-04 15:51:10 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria_id,
        c1_0.id,
        c1_0.descripcion,
        c1_0.fecha_creacion,
        c1_0.nombre,
        p1_0.descripcion,
        p1_0.fecha_actualizacion,
        p1_0.fecha_creacion,
        p1_0.imagen,
        p1_0.nombre,
        p1_0.precio,
        p1_0.stock_actual,
        p1_0.stock_minimo 
    from
        productos p1_0 
    join
        categorias c1_0 
            on c1_0.id=p1_0.categoria_id 
    where
        p1_0.id=?
2025-08-04 15:51:10 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.activo,
        u1_0.email,
        u1_0.fecha_creacion,
        u1_0.nombre_completo,
        u1_0.password,
        u1_0.rol_id,
        r1_0.id,
        r1_0.descripcion,
        r1_0.fecha_creacion,
        r1_0.nombre,
        u1_0.username 
    from
        usuarios u1_0 
    join
        roles r1_0 
            on r1_0.id=u1_0.rol_id 
    where
        u1_0.id=?
2025-08-04 15:51:10 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria_id,
        c1_0.id,
        c1_0.descripcion,
        c1_0.fecha_creacion,
        c1_0.nombre,
        p1_0.descripcion,
        p1_0.fecha_actualizacion,
        p1_0.fecha_creacion,
        p1_0.imagen,
        p1_0.nombre,
        p1_0.precio,
        p1_0.stock_actual,
        p1_0.stock_minimo 
    from
        productos p1_0 
    join
        categorias c1_0 
            on c1_0.id=p1_0.categoria_id 
    where
        p1_0.id=?
2025-08-04 15:51:10 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.activo,
        u1_0.email,
        u1_0.fecha_creacion,
        u1_0.nombre_completo,
        u1_0.password,
        u1_0.rol_id,
        r1_0.id,
        r1_0.descripcion,
        r1_0.fecha_creacion,
        r1_0.nombre,
        u1_0.username 
    from
        usuarios u1_0 
    join
        roles r1_0 
            on r1_0.id=u1_0.rol_id 
    where
        u1_0.id=?
2025-08-04 15:51:10 [http-nio-8080-exec-4] INFO  c.j.i.c.MovimientoController - GET /api/movimientos/historial - P√°gina 1/1, 4 movimientos
2025-08-04 15:51:15 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /api/movimientos/recientes?dias=7
2025-08-04 15:51:15 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/movimientos/recientes?dias=7
2025-08-04 15:51:15 [http-nio-8080-exec-3] DEBUG c.j.i.s.JwtAuthenticationFilter - Procesando request: GET /api/movimientos/recientes
2025-08-04 15:51:15 [http-nio-8080-exec-3] DEBUG c.j.i.s.UserDetailsServiceImpl - Cargando usuario por username: admin
2025-08-04 15:51:15 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.activo,
        u1_0.email,
        u1_0.fecha_creacion,
        u1_0.nombre_completo,
        u1_0.password,
        u1_0.rol_id,
        u1_0.username 
    from
        usuarios u1_0 
    where
        u1_0.username=? 
        and u1_0.activo
2025-08-04 15:51:15 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.descripcion,
        r1_0.fecha_creacion,
        r1_0.nombre 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-04 15:51:15 [http-nio-8080-exec-3] DEBUG c.j.i.s.UserDetailsServiceImpl - Autoridades creadas para usuario admin: [ROLE_ADMIN, ADMIN, READ, WRITE, DELETE, ADMIN, REPORTS, USERS, INVENTORY]
2025-08-04 15:51:15 [http-nio-8080-exec-3] INFO  c.j.i.s.UserDetailsServiceImpl - Usuario cargado exitosamente: admin con rol: ADMIN
2025-08-04 15:51:15 [http-nio-8080-exec-3] DEBUG c.j.i.s.JwtAuthenticationFilter - Usuario autenticado exitosamente: admin para request: /api/movimientos/recientes
2025-08-04 15:51:15 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/movimientos/recientes?dias=7
2025-08-04 15:51:15 [http-nio-8080-exec-3] INFO  c.j.i.c.MovimientoController - GET /api/movimientos/recientes?dias=7 - Solicitando movimientos recientes
2025-08-04 15:51:15 [http-nio-8080-exec-3] DEBUG c.j.i.service.MovimientoService - Obteniendo movimientos de los √∫ltimos 7 d√≠as
2025-08-04 15:51:15 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        m1_0.id,
        m1_0.cantidad,
        m1_0.fecha,
        m1_0.motivo,
        m1_0.producto_id,
        m1_0.tipo_movimiento,
        m1_0.usuario_id 
    from
        movimientos m1_0 
    where
        m1_0.fecha>=? 
    order by
        m1_0.fecha desc
2025-08-04 15:51:15 [http-nio-8080-exec-3] INFO  c.j.i.c.MovimientoController - GET /api/movimientos/recientes - Encontrados 0 movimientos de los √∫ltimos 7 d√≠as
2025-08-04 15:51:15 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/movimientos/recientes?dias=7
2025-08-04 15:51:15 [http-nio-8080-exec-8] DEBUG c.j.i.s.JwtAuthenticationFilter - Procesando request: GET /api/movimientos/recientes
2025-08-04 15:51:15 [http-nio-8080-exec-8] DEBUG c.j.i.s.UserDetailsServiceImpl - Cargando usuario por username: admin
2025-08-04 15:51:15 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.activo,
        u1_0.email,
        u1_0.fecha_creacion,
        u1_0.nombre_completo,
        u1_0.password,
        u1_0.rol_id,
        u1_0.username 
    from
        usuarios u1_0 
    where
        u1_0.username=? 
        and u1_0.activo
2025-08-04 15:51:15 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.descripcion,
        r1_0.fecha_creacion,
        r1_0.nombre 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-04 15:51:15 [http-nio-8080-exec-8] DEBUG c.j.i.s.UserDetailsServiceImpl - Autoridades creadas para usuario admin: [ROLE_ADMIN, ADMIN, READ, WRITE, DELETE, ADMIN, REPORTS, USERS, INVENTORY]
2025-08-04 15:51:15 [http-nio-8080-exec-8] INFO  c.j.i.s.UserDetailsServiceImpl - Usuario cargado exitosamente: admin con rol: ADMIN
2025-08-04 15:51:15 [http-nio-8080-exec-8] DEBUG c.j.i.s.JwtAuthenticationFilter - Usuario autenticado exitosamente: admin para request: /api/movimientos/recientes
2025-08-04 15:51:15 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/movimientos/recientes?dias=7
2025-08-04 15:51:15 [http-nio-8080-exec-8] INFO  c.j.i.c.MovimientoController - GET /api/movimientos/recientes?dias=7 - Solicitando movimientos recientes
2025-08-04 15:51:15 [http-nio-8080-exec-8] DEBUG c.j.i.service.MovimientoService - Obteniendo movimientos de los √∫ltimos 7 d√≠as
2025-08-04 15:51:15 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        m1_0.id,
        m1_0.cantidad,
        m1_0.fecha,
        m1_0.motivo,
        m1_0.producto_id,
        m1_0.tipo_movimiento,
        m1_0.usuario_id 
    from
        movimientos m1_0 
    where
        m1_0.fecha>=? 
    order by
        m1_0.fecha desc
2025-08-04 15:51:15 [http-nio-8080-exec-8] INFO  c.j.i.c.MovimientoController - GET /api/movimientos/recientes - Encontrados 0 movimientos de los √∫ltimos 7 d√≠as
2025-08-04 15:51:25 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/usuarios/activos
2025-08-04 15:51:25 [http-nio-8080-exec-6] DEBUG c.j.i.s.JwtAuthenticationFilter - Procesando request: GET /api/usuarios/activos
2025-08-04 15:51:25 [http-nio-8080-exec-6] DEBUG c.j.i.s.UserDetailsServiceImpl - Cargando usuario por username: admin
2025-08-04 15:51:25 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.activo,
        u1_0.email,
        u1_0.fecha_creacion,
        u1_0.nombre_completo,
        u1_0.password,
        u1_0.rol_id,
        u1_0.username 
    from
        usuarios u1_0 
    where
        u1_0.username=? 
        and u1_0.activo
2025-08-04 15:51:25 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.descripcion,
        r1_0.fecha_creacion,
        r1_0.nombre 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-04 15:51:25 [http-nio-8080-exec-6] DEBUG c.j.i.s.UserDetailsServiceImpl - Autoridades creadas para usuario admin: [ROLE_ADMIN, ADMIN, READ, WRITE, DELETE, ADMIN, REPORTS, USERS, INVENTORY]
2025-08-04 15:51:25 [http-nio-8080-exec-6] INFO  c.j.i.s.UserDetailsServiceImpl - Usuario cargado exitosamente: admin con rol: ADMIN
2025-08-04 15:51:25 [http-nio-8080-exec-6] DEBUG c.j.i.s.JwtAuthenticationFilter - Usuario autenticado exitosamente: admin para request: /api/usuarios/activos
2025-08-04 15:51:25 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/usuarios/activos
2025-08-04 15:51:25 [http-nio-8080-exec-6] INFO  c.j.i.controller.UsuarioController - GET /api/usuarios/activos - Solicitando usuarios activos
2025-08-04 15:51:25 [http-nio-8080-exec-6] DEBUG c.j.i.service.UsuarioService - Obteniendo usuarios activos
2025-08-04 15:51:25 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.activo,
        u1_0.email,
        u1_0.fecha_creacion,
        u1_0.nombre_completo,
        u1_0.password,
        u1_0.rol_id,
        u1_0.username 
    from
        usuarios u1_0 
    where
        u1_0.activo
2025-08-04 15:51:25 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.descripcion,
        r1_0.fecha_creacion,
        r1_0.nombre 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-04 15:51:25 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.descripcion,
        r1_0.fecha_creacion,
        r1_0.nombre 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-04 15:51:25 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.descripcion,
        r1_0.fecha_creacion,
        r1_0.nombre 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-04 15:51:25 [http-nio-8080-exec-6] INFO  c.j.i.controller.UsuarioController - GET /api/usuarios/activos - Encontrados 3 usuarios activos
2025-08-04 15:52:05 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/movimientos/entrada
2025-08-04 15:52:05 [http-nio-8080-exec-2] DEBUG c.j.i.s.JwtAuthenticationFilter - Procesando request: POST /api/movimientos/entrada
2025-08-04 15:52:05 [http-nio-8080-exec-2] DEBUG c.j.i.s.UserDetailsServiceImpl - Cargando usuario por username: admin
2025-08-04 15:52:05 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.activo,
        u1_0.email,
        u1_0.fecha_creacion,
        u1_0.nombre_completo,
        u1_0.password,
        u1_0.rol_id,
        u1_0.username 
    from
        usuarios u1_0 
    where
        u1_0.username=? 
        and u1_0.activo
2025-08-04 15:52:05 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.descripcion,
        r1_0.fecha_creacion,
        r1_0.nombre 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-04 15:52:05 [http-nio-8080-exec-2] DEBUG c.j.i.s.UserDetailsServiceImpl - Autoridades creadas para usuario admin: [ROLE_ADMIN, ADMIN, READ, WRITE, DELETE, ADMIN, REPORTS, USERS, INVENTORY]
2025-08-04 15:52:05 [http-nio-8080-exec-2] INFO  c.j.i.s.UserDetailsServiceImpl - Usuario cargado exitosamente: admin con rol: ADMIN
2025-08-04 15:52:05 [http-nio-8080-exec-2] DEBUG c.j.i.s.JwtAuthenticationFilter - Usuario autenticado exitosamente: admin para request: /api/movimientos/entrada
2025-08-04 15:52:05 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/movimientos/entrada
2025-08-04 15:52:05 [http-nio-8080-exec-2] INFO  c.j.i.c.MovimientoController - POST /api/movimientos/entrada - Creando entrada: MovimientoRequest{producto=2, usuario=1, tipo=ENTRADA, cantidad=25}
2025-08-04 15:52:05 [http-nio-8080-exec-2] DEBUG c.j.i.service.MovimientoService - Creando entrada de inventario - Producto: 2, Usuario: 1, Cantidad: 25
2025-08-04 15:52:05 [http-nio-8080-exec-2] DEBUG c.j.i.service.ProductoService - Obteniendo producto por ID: 2
2025-08-04 15:52:05 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria_id,
        c1_0.id,
        c1_0.descripcion,
        c1_0.fecha_creacion,
        c1_0.nombre,
        p1_0.descripcion,
        p1_0.fecha_actualizacion,
        p1_0.fecha_creacion,
        p1_0.imagen,
        p1_0.nombre,
        p1_0.precio,
        p1_0.stock_actual,
        p1_0.stock_minimo 
    from
        productos p1_0 
    join
        categorias c1_0 
            on c1_0.id=p1_0.categoria_id 
    where
        p1_0.id=?
2025-08-04 15:52:05 [http-nio-8080-exec-2] DEBUG c.j.i.service.UsuarioService - Obteniendo usuario por ID: 1
2025-08-04 15:52:05 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.activo,
        u1_0.email,
        u1_0.fecha_creacion,
        u1_0.nombre_completo,
        u1_0.password,
        u1_0.rol_id,
        r1_0.id,
        r1_0.descripcion,
        r1_0.fecha_creacion,
        r1_0.nombre,
        u1_0.username 
    from
        usuarios u1_0 
    join
        roles r1_0 
            on r1_0.id=u1_0.rol_id 
    where
        u1_0.id=?
2025-08-04 15:52:05 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    insert 
    into
        movimientos
        (cantidad, fecha, motivo, producto_id, tipo_movimiento, usuario_id) 
    values
        (?, ?, ?, ?, ?, ?)
2025-08-04 15:52:05 [http-nio-8080-exec-2] DEBUG c.j.i.service.ProductoService - Actualizando stock del producto ID: 2 a 27
2025-08-04 15:52:05 [http-nio-8080-exec-2] INFO  c.j.i.service.ProductoService - Stock actualizado para producto 'iPhone 13 Mini': 2 -> 27
2025-08-04 15:52:05 [http-nio-8080-exec-2] INFO  c.j.i.service.MovimientoService - Entrada creada exitosamente - Producto: 'iPhone 13 Mini', Stock: 2 -> 27, Cantidad entrada: 25
2025-08-04 15:52:05 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    update
        productos 
    set
        categoria_id=?,
        descripcion=?,
        fecha_actualizacion=?,
        imagen=?,
        nombre=?,
        precio=?,
        stock_actual=?,
        stock_minimo=? 
    where
        id=?
2025-08-04 15:52:05 [http-nio-8080-exec-2] INFO  c.j.i.c.MovimientoController - POST /api/movimientos/entrada - Entrada creada exitosamente con ID: 5
2025-08-04 15:52:05 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/movimientos
2025-08-04 15:52:05 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/productos
2025-08-04 15:52:05 [http-nio-8080-exec-5] DEBUG c.j.i.s.JwtAuthenticationFilter - Procesando request: GET /api/productos
2025-08-04 15:52:05 [http-nio-8080-exec-5] DEBUG c.j.i.s.UserDetailsServiceImpl - Cargando usuario por username: admin
2025-08-04 15:52:05 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.activo,
        u1_0.email,
        u1_0.fecha_creacion,
        u1_0.nombre_completo,
        u1_0.password,
        u1_0.rol_id,
        u1_0.username 
    from
        usuarios u1_0 
    where
        u1_0.username=? 
        and u1_0.activo
2025-08-04 15:52:05 [http-nio-8080-exec-10] DEBUG c.j.i.s.JwtAuthenticationFilter - Procesando request: GET /api/movimientos
2025-08-04 15:52:05 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.descripcion,
        r1_0.fecha_creacion,
        r1_0.nombre 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-04 15:52:05 [http-nio-8080-exec-5] DEBUG c.j.i.s.UserDetailsServiceImpl - Autoridades creadas para usuario admin: [ROLE_ADMIN, ADMIN, READ, WRITE, DELETE, ADMIN, REPORTS, USERS, INVENTORY]
2025-08-04 15:52:05 [http-nio-8080-exec-5] INFO  c.j.i.s.UserDetailsServiceImpl - Usuario cargado exitosamente: admin con rol: ADMIN
2025-08-04 15:52:05 [http-nio-8080-exec-10] DEBUG c.j.i.s.UserDetailsServiceImpl - Cargando usuario por username: admin
2025-08-04 15:52:05 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.activo,
        u1_0.email,
        u1_0.fecha_creacion,
        u1_0.nombre_completo,
        u1_0.password,
        u1_0.rol_id,
        u1_0.username 
    from
        usuarios u1_0 
    where
        u1_0.username=? 
        and u1_0.activo
2025-08-04 15:52:05 [http-nio-8080-exec-5] DEBUG c.j.i.s.JwtAuthenticationFilter - Usuario autenticado exitosamente: admin para request: /api/productos
2025-08-04 15:52:05 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.descripcion,
        r1_0.fecha_creacion,
        r1_0.nombre 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-04 15:52:05 [http-nio-8080-exec-10] DEBUG c.j.i.s.UserDetailsServiceImpl - Autoridades creadas para usuario admin: [ROLE_ADMIN, ADMIN, READ, WRITE, DELETE, ADMIN, REPORTS, USERS, INVENTORY]
2025-08-04 15:52:05 [http-nio-8080-exec-10] INFO  c.j.i.s.UserDetailsServiceImpl - Usuario cargado exitosamente: admin con rol: ADMIN
2025-08-04 15:52:05 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/productos
2025-08-04 15:52:05 [http-nio-8080-exec-10] DEBUG c.j.i.s.JwtAuthenticationFilter - Usuario autenticado exitosamente: admin para request: /api/movimientos
2025-08-04 15:52:05 [http-nio-8080-exec-5] INFO  c.j.i.controller.ProductoController - GET /api/productos - Solicitando todos los productos
2025-08-04 15:52:05 [http-nio-8080-exec-5] DEBUG c.j.i.service.ProductoService - Obteniendo todos los productos
2025-08-04 15:52:05 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria_id,
        p1_0.descripcion,
        p1_0.fecha_actualizacion,
        p1_0.fecha_creacion,
        p1_0.imagen,
        p1_0.nombre,
        p1_0.precio,
        p1_0.stock_actual,
        p1_0.stock_minimo 
    from
        productos p1_0
2025-08-04 15:52:05 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/movimientos
2025-08-04 15:52:05 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.descripcion,
        c1_0.fecha_creacion,
        c1_0.nombre 
    from
        categorias c1_0 
    where
        c1_0.id=?
2025-08-04 15:52:05 [http-nio-8080-exec-10] INFO  c.j.i.c.MovimientoController - GET /api/movimientos - Solicitando todos los movimientos
2025-08-04 15:52:05 [http-nio-8080-exec-10] DEBUG c.j.i.service.MovimientoService - Obteniendo todos los movimientos
2025-08-04 15:52:05 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        m1_0.id,
        m1_0.cantidad,
        m1_0.fecha,
        m1_0.motivo,
        m1_0.producto_id,
        m1_0.tipo_movimiento,
        m1_0.usuario_id 
    from
        movimientos m1_0
2025-08-04 15:52:05 [http-nio-8080-exec-5] INFO  c.j.i.controller.ProductoController - GET /api/productos - Encontrados 3 productos
2025-08-04 15:52:05 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria_id,
        c1_0.id,
        c1_0.descripcion,
        c1_0.fecha_creacion,
        c1_0.nombre,
        p1_0.descripcion,
        p1_0.fecha_actualizacion,
        p1_0.fecha_creacion,
        p1_0.imagen,
        p1_0.nombre,
        p1_0.precio,
        p1_0.stock_actual,
        p1_0.stock_minimo 
    from
        productos p1_0 
    join
        categorias c1_0 
            on c1_0.id=p1_0.categoria_id 
    where
        p1_0.id=?
2025-08-04 15:52:05 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.activo,
        u1_0.email,
        u1_0.fecha_creacion,
        u1_0.nombre_completo,
        u1_0.password,
        u1_0.rol_id,
        r1_0.id,
        r1_0.descripcion,
        r1_0.fecha_creacion,
        r1_0.nombre,
        u1_0.username 
    from
        usuarios u1_0 
    join
        roles r1_0 
            on r1_0.id=u1_0.rol_id 
    where
        u1_0.id=?
2025-08-04 15:52:05 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria_id,
        c1_0.id,
        c1_0.descripcion,
        c1_0.fecha_creacion,
        c1_0.nombre,
        p1_0.descripcion,
        p1_0.fecha_actualizacion,
        p1_0.fecha_creacion,
        p1_0.imagen,
        p1_0.nombre,
        p1_0.precio,
        p1_0.stock_actual,
        p1_0.stock_minimo 
    from
        productos p1_0 
    join
        categorias c1_0 
            on c1_0.id=p1_0.categoria_id 
    where
        p1_0.id=?
2025-08-04 15:52:05 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.activo,
        u1_0.email,
        u1_0.fecha_creacion,
        u1_0.nombre_completo,
        u1_0.password,
        u1_0.rol_id,
        r1_0.id,
        r1_0.descripcion,
        r1_0.fecha_creacion,
        r1_0.nombre,
        u1_0.username 
    from
        usuarios u1_0 
    join
        roles r1_0 
            on r1_0.id=u1_0.rol_id 
    where
        u1_0.id=?
2025-08-04 15:52:05 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria_id,
        c1_0.id,
        c1_0.descripcion,
        c1_0.fecha_creacion,
        c1_0.nombre,
        p1_0.descripcion,
        p1_0.fecha_actualizacion,
        p1_0.fecha_creacion,
        p1_0.imagen,
        p1_0.nombre,
        p1_0.precio,
        p1_0.stock_actual,
        p1_0.stock_minimo 
    from
        productos p1_0 
    join
        categorias c1_0 
            on c1_0.id=p1_0.categoria_id 
    where
        p1_0.id=?
2025-08-04 15:52:05 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.activo,
        u1_0.email,
        u1_0.fecha_creacion,
        u1_0.nombre_completo,
        u1_0.password,
        u1_0.rol_id,
        r1_0.id,
        r1_0.descripcion,
        r1_0.fecha_creacion,
        r1_0.nombre,
        u1_0.username 
    from
        usuarios u1_0 
    join
        roles r1_0 
            on r1_0.id=u1_0.rol_id 
    where
        u1_0.id=?
2025-08-04 15:52:05 [http-nio-8080-exec-10] INFO  c.j.i.c.MovimientoController - GET /api/movimientos - Encontrados 5 movimientos
2025-08-04 15:52:32 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /api/movimientos/estadisticas?inicio=2025-07-04T15:52&fin=2025-08-04T15:52
2025-08-04 15:52:32 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/movimientos/estadisticas?inicio=2025-07-04T15:52&fin=2025-08-04T15:52
2025-08-04 15:52:32 [http-nio-8080-exec-7] DEBUG c.j.i.s.JwtAuthenticationFilter - Procesando request: GET /api/movimientos/estadisticas
2025-08-04 15:52:32 [http-nio-8080-exec-7] DEBUG c.j.i.s.UserDetailsServiceImpl - Cargando usuario por username: admin
2025-08-04 15:52:32 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.activo,
        u1_0.email,
        u1_0.fecha_creacion,
        u1_0.nombre_completo,
        u1_0.password,
        u1_0.rol_id,
        u1_0.username 
    from
        usuarios u1_0 
    where
        u1_0.username=? 
        and u1_0.activo
2025-08-04 15:52:32 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.descripcion,
        r1_0.fecha_creacion,
        r1_0.nombre 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-04 15:52:32 [http-nio-8080-exec-7] DEBUG c.j.i.s.UserDetailsServiceImpl - Autoridades creadas para usuario admin: [ROLE_ADMIN, ADMIN, READ, WRITE, DELETE, ADMIN, REPORTS, USERS, INVENTORY]
2025-08-04 15:52:32 [http-nio-8080-exec-7] INFO  c.j.i.s.UserDetailsServiceImpl - Usuario cargado exitosamente: admin con rol: ADMIN
2025-08-04 15:52:32 [http-nio-8080-exec-7] DEBUG c.j.i.s.JwtAuthenticationFilter - Usuario autenticado exitosamente: admin para request: /api/movimientos/estadisticas
2025-08-04 15:52:32 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/movimientos/estadisticas?inicio=2025-07-04T15:52&fin=2025-08-04T15:52
2025-08-04 15:52:32 [http-nio-8080-exec-7] INFO  c.j.i.c.MovimientoController - GET /api/movimientos/estadisticas?inicio=2025-07-04T15:52&fin=2025-08-04T15:52 - Solicitando estad√≠sticas
2025-08-04 15:52:32 [http-nio-8080-exec-7] DEBUG c.j.i.service.MovimientoService - Obteniendo estad√≠sticas de movimientos por periodo: 2025-07-04T15:52 - 2025-08-04T15:52
2025-08-04 15:52:32 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        m1_0.tipo_movimiento,
        count(m1_0.id),
        sum(m1_0.cantidad) 
    from
        movimientos m1_0 
    where
        m1_0.fecha between ? and ? 
    group by
        m1_0.tipo_movimiento
2025-08-04 15:52:32 [http-nio-8080-exec-7] INFO  c.j.i.c.MovimientoController - GET /api/movimientos/estadisticas - Estad√≠sticas obtenidas
2025-08-04 15:52:35 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/movimientos/historial?pagina=0&tama%C3%B1o=10
2025-08-04 15:52:35 [http-nio-8080-exec-3] DEBUG c.j.i.s.JwtAuthenticationFilter - Procesando request: GET /api/movimientos/historial
2025-08-04 15:52:35 [http-nio-8080-exec-3] DEBUG c.j.i.s.UserDetailsServiceImpl - Cargando usuario por username: admin
2025-08-04 15:52:35 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.activo,
        u1_0.email,
        u1_0.fecha_creacion,
        u1_0.nombre_completo,
        u1_0.password,
        u1_0.rol_id,
        u1_0.username 
    from
        usuarios u1_0 
    where
        u1_0.username=? 
        and u1_0.activo
2025-08-04 15:52:35 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.descripcion,
        r1_0.fecha_creacion,
        r1_0.nombre 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-04 15:52:35 [http-nio-8080-exec-3] DEBUG c.j.i.s.UserDetailsServiceImpl - Autoridades creadas para usuario admin: [ROLE_ADMIN, ADMIN, READ, WRITE, DELETE, ADMIN, REPORTS, USERS, INVENTORY]
2025-08-04 15:52:35 [http-nio-8080-exec-3] INFO  c.j.i.s.UserDetailsServiceImpl - Usuario cargado exitosamente: admin con rol: ADMIN
2025-08-04 15:52:35 [http-nio-8080-exec-3] DEBUG c.j.i.s.JwtAuthenticationFilter - Usuario autenticado exitosamente: admin para request: /api/movimientos/historial
2025-08-04 15:52:35 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/movimientos/historial?pagina=0&tama%C3%B1o=10
2025-08-04 15:52:35 [http-nio-8080-exec-3] INFO  c.j.i.c.MovimientoController - GET /api/movimientos/historial?pagina=0&tama√±o=10 - Solicitando historial paginado
2025-08-04 15:52:35 [http-nio-8080-exec-3] DEBUG c.j.i.service.MovimientoService - Obteniendo historial paginado - P√°gina: 0, Tama√±o: 10
2025-08-04 15:52:35 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        m1_0.id,
        m1_0.cantidad,
        m1_0.fecha,
        m1_0.motivo,
        m1_0.producto_id,
        m1_0.tipo_movimiento,
        m1_0.usuario_id 
    from
        movimientos m1_0 
    order by
        m1_0.fecha desc,
        m1_0.fecha desc 
    limit
        ?
2025-08-04 15:52:35 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria_id,
        c1_0.id,
        c1_0.descripcion,
        c1_0.fecha_creacion,
        c1_0.nombre,
        p1_0.descripcion,
        p1_0.fecha_actualizacion,
        p1_0.fecha_creacion,
        p1_0.imagen,
        p1_0.nombre,
        p1_0.precio,
        p1_0.stock_actual,
        p1_0.stock_minimo 
    from
        productos p1_0 
    join
        categorias c1_0 
            on c1_0.id=p1_0.categoria_id 
    where
        p1_0.id=?
2025-08-04 15:52:35 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.activo,
        u1_0.email,
        u1_0.fecha_creacion,
        u1_0.nombre_completo,
        u1_0.password,
        u1_0.rol_id,
        r1_0.id,
        r1_0.descripcion,
        r1_0.fecha_creacion,
        r1_0.nombre,
        u1_0.username 
    from
        usuarios u1_0 
    join
        roles r1_0 
            on r1_0.id=u1_0.rol_id 
    where
        u1_0.id=?
2025-08-04 15:52:35 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria_id,
        c1_0.id,
        c1_0.descripcion,
        c1_0.fecha_creacion,
        c1_0.nombre,
        p1_0.descripcion,
        p1_0.fecha_actualizacion,
        p1_0.fecha_creacion,
        p1_0.imagen,
        p1_0.nombre,
        p1_0.precio,
        p1_0.stock_actual,
        p1_0.stock_minimo 
    from
        productos p1_0 
    join
        categorias c1_0 
            on c1_0.id=p1_0.categoria_id 
    where
        p1_0.id=?
2025-08-04 15:52:35 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.activo,
        u1_0.email,
        u1_0.fecha_creacion,
        u1_0.nombre_completo,
        u1_0.password,
        u1_0.rol_id,
        r1_0.id,
        r1_0.descripcion,
        r1_0.fecha_creacion,
        r1_0.nombre,
        u1_0.username 
    from
        usuarios u1_0 
    join
        roles r1_0 
            on r1_0.id=u1_0.rol_id 
    where
        u1_0.id=?
2025-08-04 15:52:35 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria_id,
        c1_0.id,
        c1_0.descripcion,
        c1_0.fecha_creacion,
        c1_0.nombre,
        p1_0.descripcion,
        p1_0.fecha_actualizacion,
        p1_0.fecha_creacion,
        p1_0.imagen,
        p1_0.nombre,
        p1_0.precio,
        p1_0.stock_actual,
        p1_0.stock_minimo 
    from
        productos p1_0 
    join
        categorias c1_0 
            on c1_0.id=p1_0.categoria_id 
    where
        p1_0.id=?
2025-08-04 15:52:35 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.activo,
        u1_0.email,
        u1_0.fecha_creacion,
        u1_0.nombre_completo,
        u1_0.password,
        u1_0.rol_id,
        r1_0.id,
        r1_0.descripcion,
        r1_0.fecha_creacion,
        r1_0.nombre,
        u1_0.username 
    from
        usuarios u1_0 
    join
        roles r1_0 
            on r1_0.id=u1_0.rol_id 
    where
        u1_0.id=?
2025-08-04 15:52:35 [http-nio-8080-exec-3] INFO  c.j.i.c.MovimientoController - GET /api/movimientos/historial - P√°gina 1/1, 5 movimientos
2025-08-04 15:52:43 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /api/movimientos/por-producto/2
2025-08-04 15:52:43 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /api/movimientos/resumen-producto/2
2025-08-04 15:52:43 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/movimientos/resumen-producto/2
2025-08-04 15:52:43 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/movimientos/por-producto/2
2025-08-04 15:52:43 [http-nio-8080-exec-9] DEBUG c.j.i.s.JwtAuthenticationFilter - Procesando request: GET /api/movimientos/resumen-producto/2
2025-08-04 15:52:43 [http-nio-8080-exec-1] DEBUG c.j.i.s.JwtAuthenticationFilter - Procesando request: GET /api/movimientos/por-producto/2
2025-08-04 15:52:43 [http-nio-8080-exec-1] DEBUG c.j.i.s.UserDetailsServiceImpl - Cargando usuario por username: admin
2025-08-04 15:52:43 [http-nio-8080-exec-9] DEBUG c.j.i.s.UserDetailsServiceImpl - Cargando usuario por username: admin
2025-08-04 15:52:43 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.activo,
        u1_0.email,
        u1_0.fecha_creacion,
        u1_0.nombre_completo,
        u1_0.password,
        u1_0.rol_id,
        u1_0.username 
    from
        usuarios u1_0 
    where
        u1_0.username=? 
        and u1_0.activo
2025-08-04 15:52:43 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.activo,
        u1_0.email,
        u1_0.fecha_creacion,
        u1_0.nombre_completo,
        u1_0.password,
        u1_0.rol_id,
        u1_0.username 
    from
        usuarios u1_0 
    where
        u1_0.username=? 
        and u1_0.activo
2025-08-04 15:52:43 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.descripcion,
        r1_0.fecha_creacion,
        r1_0.nombre 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-04 15:52:43 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.descripcion,
        r1_0.fecha_creacion,
        r1_0.nombre 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-04 15:52:43 [http-nio-8080-exec-1] DEBUG c.j.i.s.UserDetailsServiceImpl - Autoridades creadas para usuario admin: [ROLE_ADMIN, ADMIN, READ, WRITE, DELETE, ADMIN, REPORTS, USERS, INVENTORY]
2025-08-04 15:52:43 [http-nio-8080-exec-9] DEBUG c.j.i.s.UserDetailsServiceImpl - Autoridades creadas para usuario admin: [ROLE_ADMIN, ADMIN, READ, WRITE, DELETE, ADMIN, REPORTS, USERS, INVENTORY]
2025-08-04 15:52:43 [http-nio-8080-exec-9] INFO  c.j.i.s.UserDetailsServiceImpl - Usuario cargado exitosamente: admin con rol: ADMIN
2025-08-04 15:52:43 [http-nio-8080-exec-1] INFO  c.j.i.s.UserDetailsServiceImpl - Usuario cargado exitosamente: admin con rol: ADMIN
2025-08-04 15:52:43 [http-nio-8080-exec-1] DEBUG c.j.i.s.JwtAuthenticationFilter - Usuario autenticado exitosamente: admin para request: /api/movimientos/por-producto/2
2025-08-04 15:52:43 [http-nio-8080-exec-9] DEBUG c.j.i.s.JwtAuthenticationFilter - Usuario autenticado exitosamente: admin para request: /api/movimientos/resumen-producto/2
2025-08-04 15:52:43 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/movimientos/por-producto/2
2025-08-04 15:52:43 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/movimientos/resumen-producto/2
2025-08-04 15:52:43 [http-nio-8080-exec-9] INFO  c.j.i.c.MovimientoController - GET /api/movimientos/resumen-producto/2 - Solicitando resumen por producto
2025-08-04 15:52:43 [http-nio-8080-exec-9] DEBUG c.j.i.service.MovimientoService - Obteniendo resumen de movimientos para producto ID: 2
2025-08-04 15:52:43 [http-nio-8080-exec-9] DEBUG c.j.i.service.ProductoService - Obteniendo producto por ID: 2
2025-08-04 15:52:43 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria_id,
        c1_0.id,
        c1_0.descripcion,
        c1_0.fecha_creacion,
        c1_0.nombre,
        p1_0.descripcion,
        p1_0.fecha_actualizacion,
        p1_0.fecha_creacion,
        p1_0.imagen,
        p1_0.nombre,
        p1_0.precio,
        p1_0.stock_actual,
        p1_0.stock_minimo 
    from
        productos p1_0 
    join
        categorias c1_0 
            on c1_0.id=p1_0.categoria_id 
    where
        p1_0.id=?
2025-08-04 15:52:43 [http-nio-8080-exec-1] INFO  c.j.i.c.MovimientoController - GET /api/movimientos/por-producto/2 - Solicitando movimientos por producto
2025-08-04 15:52:43 [http-nio-8080-exec-1] DEBUG c.j.i.service.MovimientoService - Obteniendo movimientos por producto ID: 2
2025-08-04 15:52:43 [http-nio-8080-exec-1] DEBUG c.j.i.service.ProductoService - Obteniendo producto por ID: 2
2025-08-04 15:52:43 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria_id,
        c1_0.id,
        c1_0.descripcion,
        c1_0.fecha_creacion,
        c1_0.nombre,
        p1_0.descripcion,
        p1_0.fecha_actualizacion,
        p1_0.fecha_creacion,
        p1_0.imagen,
        p1_0.nombre,
        p1_0.precio,
        p1_0.stock_actual,
        p1_0.stock_minimo 
    from
        productos p1_0 
    join
        categorias c1_0 
            on c1_0.id=p1_0.categoria_id 
    where
        p1_0.id=?
2025-08-04 15:52:43 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        m1_0.id,
        m1_0.cantidad,
        m1_0.fecha,
        m1_0.motivo,
        m1_0.producto_id,
        m1_0.tipo_movimiento,
        m1_0.usuario_id 
    from
        movimientos m1_0 
    left join
        productos p1_0 
            on p1_0.id=m1_0.producto_id 
    where
        p1_0.id=?
2025-08-04 15:52:43 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        coalesce(sum(m1_0.cantidad), 0) 
    from
        movimientos m1_0 
    where
        m1_0.producto_id=? 
        and m1_0.tipo_movimiento='ENTRADA'
2025-08-04 15:52:43 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.activo,
        u1_0.email,
        u1_0.fecha_creacion,
        u1_0.nombre_completo,
        u1_0.password,
        u1_0.rol_id,
        r1_0.id,
        r1_0.descripcion,
        r1_0.fecha_creacion,
        r1_0.nombre,
        u1_0.username 
    from
        usuarios u1_0 
    join
        roles r1_0 
            on r1_0.id=u1_0.rol_id 
    where
        u1_0.id=?
2025-08-04 15:52:43 [http-nio-8080-exec-1] INFO  c.j.i.c.MovimientoController - GET /api/movimientos/por-producto/2 - Encontrados 1 movimientos
2025-08-04 15:52:43 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        coalesce(sum(m1_0.cantidad), 0) 
    from
        movimientos m1_0 
    where
        m1_0.producto_id=? 
        and m1_0.tipo_movimiento='SALIDA'
2025-08-04 15:52:43 [http-nio-8080-exec-9] INFO  c.j.i.c.MovimientoController - GET /api/movimientos/resumen-producto/2 - Resumen obtenido
2025-08-04 15:52:48 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/movimientos/historial?pagina=0&tama%C3%B1o=10
2025-08-04 15:52:48 [http-nio-8080-exec-2] DEBUG c.j.i.s.JwtAuthenticationFilter - Procesando request: GET /api/movimientos/historial
2025-08-04 15:52:48 [http-nio-8080-exec-2] DEBUG c.j.i.s.UserDetailsServiceImpl - Cargando usuario por username: admin
2025-08-04 15:52:48 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.activo,
        u1_0.email,
        u1_0.fecha_creacion,
        u1_0.nombre_completo,
        u1_0.password,
        u1_0.rol_id,
        u1_0.username 
    from
        usuarios u1_0 
    where
        u1_0.username=? 
        and u1_0.activo
2025-08-04 15:52:48 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.descripcion,
        r1_0.fecha_creacion,
        r1_0.nombre 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-04 15:52:48 [http-nio-8080-exec-2] DEBUG c.j.i.s.UserDetailsServiceImpl - Autoridades creadas para usuario admin: [ROLE_ADMIN, ADMIN, READ, WRITE, DELETE, ADMIN, REPORTS, USERS, INVENTORY]
2025-08-04 15:52:48 [http-nio-8080-exec-2] INFO  c.j.i.s.UserDetailsServiceImpl - Usuario cargado exitosamente: admin con rol: ADMIN
2025-08-04 15:52:48 [http-nio-8080-exec-2] DEBUG c.j.i.s.JwtAuthenticationFilter - Usuario autenticado exitosamente: admin para request: /api/movimientos/historial
2025-08-04 15:52:48 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/movimientos/historial?pagina=0&tama%C3%B1o=10
2025-08-04 15:52:48 [http-nio-8080-exec-2] INFO  c.j.i.c.MovimientoController - GET /api/movimientos/historial?pagina=0&tama√±o=10 - Solicitando historial paginado
2025-08-04 15:52:48 [http-nio-8080-exec-2] DEBUG c.j.i.service.MovimientoService - Obteniendo historial paginado - P√°gina: 0, Tama√±o: 10
2025-08-04 15:52:48 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        m1_0.id,
        m1_0.cantidad,
        m1_0.fecha,
        m1_0.motivo,
        m1_0.producto_id,
        m1_0.tipo_movimiento,
        m1_0.usuario_id 
    from
        movimientos m1_0 
    order by
        m1_0.fecha desc,
        m1_0.fecha desc 
    limit
        ?
2025-08-04 15:52:48 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria_id,
        c1_0.id,
        c1_0.descripcion,
        c1_0.fecha_creacion,
        c1_0.nombre,
        p1_0.descripcion,
        p1_0.fecha_actualizacion,
        p1_0.fecha_creacion,
        p1_0.imagen,
        p1_0.nombre,
        p1_0.precio,
        p1_0.stock_actual,
        p1_0.stock_minimo 
    from
        productos p1_0 
    join
        categorias c1_0 
            on c1_0.id=p1_0.categoria_id 
    where
        p1_0.id=?
2025-08-04 15:52:48 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.activo,
        u1_0.email,
        u1_0.fecha_creacion,
        u1_0.nombre_completo,
        u1_0.password,
        u1_0.rol_id,
        r1_0.id,
        r1_0.descripcion,
        r1_0.fecha_creacion,
        r1_0.nombre,
        u1_0.username 
    from
        usuarios u1_0 
    join
        roles r1_0 
            on r1_0.id=u1_0.rol_id 
    where
        u1_0.id=?
2025-08-04 15:52:49 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria_id,
        c1_0.id,
        c1_0.descripcion,
        c1_0.fecha_creacion,
        c1_0.nombre,
        p1_0.descripcion,
        p1_0.fecha_actualizacion,
        p1_0.fecha_creacion,
        p1_0.imagen,
        p1_0.nombre,
        p1_0.precio,
        p1_0.stock_actual,
        p1_0.stock_minimo 
    from
        productos p1_0 
    join
        categorias c1_0 
            on c1_0.id=p1_0.categoria_id 
    where
        p1_0.id=?
2025-08-04 15:52:49 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.activo,
        u1_0.email,
        u1_0.fecha_creacion,
        u1_0.nombre_completo,
        u1_0.password,
        u1_0.rol_id,
        r1_0.id,
        r1_0.descripcion,
        r1_0.fecha_creacion,
        r1_0.nombre,
        u1_0.username 
    from
        usuarios u1_0 
    join
        roles r1_0 
            on r1_0.id=u1_0.rol_id 
    where
        u1_0.id=?
2025-08-04 15:52:49 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.categoria_id,
        c1_0.id,
        c1_0.descripcion,
        c1_0.fecha_creacion,
        c1_0.nombre,
        p1_0.descripcion,
        p1_0.fecha_actualizacion,
        p1_0.fecha_creacion,
        p1_0.imagen,
        p1_0.nombre,
        p1_0.precio,
        p1_0.stock_actual,
        p1_0.stock_minimo 
    from
        productos p1_0 
    join
        categorias c1_0 
            on c1_0.id=p1_0.categoria_id 
    where
        p1_0.id=?
2025-08-04 15:52:49 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.activo,
        u1_0.email,
        u1_0.fecha_creacion,
        u1_0.nombre_completo,
        u1_0.password,
        u1_0.rol_id,
        r1_0.id,
        r1_0.descripcion,
        r1_0.fecha_creacion,
        r1_0.nombre,
        u1_0.username 
    from
        usuarios u1_0 
    join
        roles r1_0 
            on r1_0.id=u1_0.rol_id 
    where
        u1_0.id=?
2025-08-04 15:52:49 [http-nio-8080-exec-2] INFO  c.j.i.c.MovimientoController - GET /api/movimientos/historial - P√°gina 1/1, 5 movimientos
2025-08-04 15:53:04 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /api/categorias
2025-08-04 15:53:04 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/categorias
2025-08-04 15:53:04 [http-nio-8080-exec-10] DEBUG c.j.i.s.JwtAuthenticationFilter - Procesando request: GET /api/categorias
2025-08-04 15:53:04 [http-nio-8080-exec-10] DEBUG c.j.i.s.UserDetailsServiceImpl - Cargando usuario por username: admin
2025-08-04 15:53:04 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.activo,
        u1_0.email,
        u1_0.fecha_creacion,
        u1_0.nombre_completo,
        u1_0.password,
        u1_0.rol_id,
        u1_0.username 
    from
        usuarios u1_0 
    where
        u1_0.username=? 
        and u1_0.activo
2025-08-04 15:53:04 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.descripcion,
        r1_0.fecha_creacion,
        r1_0.nombre 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-04 15:53:04 [http-nio-8080-exec-10] DEBUG c.j.i.s.UserDetailsServiceImpl - Autoridades creadas para usuario admin: [ROLE_ADMIN, ADMIN, READ, WRITE, DELETE, ADMIN, REPORTS, USERS, INVENTORY]
2025-08-04 15:53:04 [http-nio-8080-exec-10] INFO  c.j.i.s.UserDetailsServiceImpl - Usuario cargado exitosamente: admin con rol: ADMIN
2025-08-04 15:53:04 [http-nio-8080-exec-10] DEBUG c.j.i.s.JwtAuthenticationFilter - Usuario autenticado exitosamente: admin para request: /api/categorias
2025-08-04 15:53:04 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/categorias
2025-08-04 15:53:04 [http-nio-8080-exec-10] INFO  c.j.i.controller.CategoriaController - GET /api/categorias - Solicitando todas las categor√≠as
2025-08-04 15:53:04 [http-nio-8080-exec-10] DEBUG c.j.i.service.CategoriaService - Obteniendo todas las categor√≠as
2025-08-04 15:53:04 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.descripcion,
        c1_0.fecha_creacion,
        c1_0.nombre 
    from
        categorias c1_0
2025-08-04 15:53:04 [http-nio-8080-exec-10] INFO  c.j.i.controller.CategoriaController - GET /api/categorias - Encontradas 6 categor√≠as
2025-08-04 15:53:22 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/usuarios
2025-08-04 15:53:22 [http-nio-8080-exec-4] DEBUG c.j.i.s.JwtAuthenticationFilter - Procesando request: GET /api/usuarios
2025-08-04 15:53:22 [http-nio-8080-exec-4] DEBUG c.j.i.s.UserDetailsServiceImpl - Cargando usuario por username: admin
2025-08-04 15:53:22 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.activo,
        u1_0.email,
        u1_0.fecha_creacion,
        u1_0.nombre_completo,
        u1_0.password,
        u1_0.rol_id,
        u1_0.username 
    from
        usuarios u1_0 
    where
        u1_0.username=? 
        and u1_0.activo
2025-08-04 15:53:22 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.descripcion,
        r1_0.fecha_creacion,
        r1_0.nombre 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-04 15:53:22 [http-nio-8080-exec-4] DEBUG c.j.i.s.UserDetailsServiceImpl - Autoridades creadas para usuario admin: [ROLE_ADMIN, ADMIN, READ, WRITE, DELETE, ADMIN, REPORTS, USERS, INVENTORY]
2025-08-04 15:53:22 [http-nio-8080-exec-4] INFO  c.j.i.s.UserDetailsServiceImpl - Usuario cargado exitosamente: admin con rol: ADMIN
2025-08-04 15:53:22 [http-nio-8080-exec-4] DEBUG c.j.i.s.JwtAuthenticationFilter - Usuario autenticado exitosamente: admin para request: /api/usuarios
2025-08-04 15:53:22 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/usuarios
2025-08-04 15:53:22 [http-nio-8080-exec-4] INFO  c.j.i.controller.UsuarioController - GET /api/usuarios - Solicitando todos los usuarios
2025-08-04 15:53:22 [http-nio-8080-exec-4] DEBUG c.j.i.service.UsuarioService - Obteniendo todos los usuarios
2025-08-04 15:53:22 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.activo,
        u1_0.email,
        u1_0.fecha_creacion,
        u1_0.nombre_completo,
        u1_0.password,
        u1_0.rol_id,
        u1_0.username 
    from
        usuarios u1_0
2025-08-04 15:53:22 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.descripcion,
        r1_0.fecha_creacion,
        r1_0.nombre 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-04 15:53:22 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.descripcion,
        r1_0.fecha_creacion,
        r1_0.nombre 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-04 15:53:22 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.descripcion,
        r1_0.fecha_creacion,
        r1_0.nombre 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-04 15:53:22 [http-nio-8080-exec-4] INFO  c.j.i.controller.UsuarioController - GET /api/usuarios - Encontrados 3 usuarios
2025-08-04 15:53:49 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /api/roles
2025-08-04 15:53:49 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/roles
2025-08-04 15:53:49 [http-nio-8080-exec-8] DEBUG c.j.i.s.JwtAuthenticationFilter - Procesando request: GET /api/roles
2025-08-04 15:53:49 [http-nio-8080-exec-8] DEBUG c.j.i.s.UserDetailsServiceImpl - Cargando usuario por username: admin
2025-08-04 15:53:49 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.activo,
        u1_0.email,
        u1_0.fecha_creacion,
        u1_0.nombre_completo,
        u1_0.password,
        u1_0.rol_id,
        u1_0.username 
    from
        usuarios u1_0 
    where
        u1_0.username=? 
        and u1_0.activo
2025-08-04 15:53:49 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.descripcion,
        r1_0.fecha_creacion,
        r1_0.nombre 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-04 15:53:49 [http-nio-8080-exec-8] DEBUG c.j.i.s.UserDetailsServiceImpl - Autoridades creadas para usuario admin: [ROLE_ADMIN, ADMIN, READ, WRITE, DELETE, ADMIN, REPORTS, USERS, INVENTORY]
2025-08-04 15:53:49 [http-nio-8080-exec-8] INFO  c.j.i.s.UserDetailsServiceImpl - Usuario cargado exitosamente: admin con rol: ADMIN
2025-08-04 15:53:49 [http-nio-8080-exec-8] DEBUG c.j.i.s.JwtAuthenticationFilter - Usuario autenticado exitosamente: admin para request: /api/roles
2025-08-04 15:53:49 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/roles
2025-08-04 15:53:49 [http-nio-8080-exec-8] INFO  c.j.i.controller.RolController - GET /api/roles - Solicitando todos los roles
2025-08-04 15:53:49 [http-nio-8080-exec-8] DEBUG c.j.inventario.service.RolService - Obteniendo todos los roles
2025-08-04 15:53:49 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.descripcion,
        r1_0.fecha_creacion,
        r1_0.nombre 
    from
        roles r1_0
2025-08-04 15:53:49 [http-nio-8080-exec-8] INFO  c.j.i.controller.RolController - GET /api/roles - Encontrados 4 roles
2025-08-04 15:54:31 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/logout
2025-08-04 15:54:31 [http-nio-8080-exec-6] DEBUG c.j.i.s.JwtAuthenticationFilter - Procesando request: POST /api/auth/logout
2025-08-04 15:54:31 [http-nio-8080-exec-6] DEBUG c.j.i.s.UserDetailsServiceImpl - Cargando usuario por username: admin
2025-08-04 15:54:31 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.activo,
        u1_0.email,
        u1_0.fecha_creacion,
        u1_0.nombre_completo,
        u1_0.password,
        u1_0.rol_id,
        u1_0.username 
    from
        usuarios u1_0 
    where
        u1_0.username=? 
        and u1_0.activo
2025-08-04 15:54:31 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.descripcion,
        r1_0.fecha_creacion,
        r1_0.nombre 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-04 15:54:31 [http-nio-8080-exec-6] DEBUG c.j.i.s.UserDetailsServiceImpl - Autoridades creadas para usuario admin: [ROLE_ADMIN, ADMIN, READ, WRITE, DELETE, ADMIN, REPORTS, USERS, INVENTORY]
2025-08-04 15:54:31 [http-nio-8080-exec-6] INFO  c.j.i.s.UserDetailsServiceImpl - Usuario cargado exitosamente: admin con rol: ADMIN
2025-08-04 15:54:31 [http-nio-8080-exec-6] DEBUG c.j.i.s.JwtAuthenticationFilter - Usuario autenticado exitosamente: admin para request: /api/auth/logout
2025-08-04 15:54:31 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/logout
2025-08-04 15:54:31 [http-nio-8080-exec-6] INFO  c.j.i.controller.AuthController - POST /api/auth/logout - Solicitando logout
2025-08-04 15:54:31 [http-nio-8080-exec-6] INFO  c.j.i.controller.AuthController - Logout exitoso para usuario: admin con sessionId: admin_1754340641081_3607a992
